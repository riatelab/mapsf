[{"path":"/articles/mapsf.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"mapsf","text":"aim mapsf obtain thematic maps visual quality build classical mapping GIS software. Users package belong one two categories: cartographers willing use R R users willing create maps. Therefore, functions intuitive cartographers ensure compatibility common R workflows. mapsf uses sf objects produce base graphics. mapsf functions can classified following categories : Symbologymf_map() displays map layers georeferenced plot. three main arguments: x, sf object; var, name(s) variable(s) map; type, map layer type. Many parameters available fine tune cartographic representations. parameters common ones found GIS automatic cartography tools (e.g. classification color palettes used choropleth maps, symbols sizes used proportional symbols maps…). Map Layout Along cartographic functions, functions dedicated layout design (e.g. legends, scale bar, north arrow, title, credits…). Utility Functions set functions dedicated creation spatial objects (e.g. links creation) utility tasks (e.g. color palette management, class intervals extraction, sample dataset import…).","code":""},{"path":[]},{"path":"/articles/mapsf.html","id":"symbology","dir":"Articles","previous_headings":"Main Features","what":"Symbology","title":"mapsf","text":"type column indicates value use type argument mf_map(x, var, type). data column displays relevant data types map types. cartography column indicates corresponding function cartography.","code":""},{"path":[]},{"path":"/articles/mapsf.html","id":"themes","dir":"Articles","previous_headings":"Main Features","what":"Themes","title":"mapsf","text":"mf_theme() defines map theme. sets margins figure, background color, foreground color parameters title. set theme included package possible create custom ones.","code":""},{"path":"/articles/mapsf.html","id":"export","dir":"Articles","previous_headings":"Main Features","what":"Export","title":"mapsf","text":"mf_export() function exports maps raster (.png) vector formats (.svg). size exported map fit height/width ratio spatial object.","code":""},{"path":"/articles/mapsf.html","id":"datasets","dir":"Articles","previous_headings":"Main Features","what":"Datasets","title":"mapsf","text":"Several datasets embedded package: GeoPackage Martinique municipalities can imported mf_get_mtq() (via sf::st_read()). Sources: Base comparateur de territoires (upload date: 2018-09-25) & ADMIN EXPRESS-COG (2018 edition). Citation: Insee IGN, 2018 Fields: INSEE_COM: Municipality identifier STATUS: Municipality administrative status LIBGEO: Municipality name POP: Total population, 2015 MED: Median disposable income adjusted per equivalent household member, euros, 2015 CHOM: Unemployed population, 2015 ACT: Active population, 2015 csv file professional mobility flows Martinique municipalities. Sources: Flux de mobilité - déplacements domicile-lieu de travail (upload date: 2018-08-01) Citation: Insee, 2018 Fields: : Municipality residence identifier j: Municipality workplace identifier fij: Flows workers (employed population, 15 y.o. , 2015, flows > 100) sj: Administrative status workplace municipality","code":""},{"path":[]},{"path":"/articles/mapsf.html","id":"base-map","dir":"Articles","previous_headings":"Examples of thematic maps","what":"Base map","title":"mapsf","text":"mf_theme() allows apply theme map. mf_shadow() plots shadow polygon layer. mf_map(x, type = \"base\") displays sf objects geometries. mf_layout() add complete layout map (title, credits, north arrow, scale bar). layout elements can also set separately (mf_title(), mf_credits(), mf_arrow() mf_scale()).","code":"library(mapsf) # import the sample data set mtq <- mf_get_mtq() # set a theme mf_theme(\"iceberg\") # plot a shadow mf_shadow(mtq) # plot municipalities mf_map(mtq, type = \"base\", add = TRUE) # layout mf_layout(   title = \"Martinique\",   credits = paste0(     \"Sources: IGN, 2018\\n\",     \"mapsf \",     packageVersion(\"mapsf\")   ) )"},{"path":"/articles/mapsf.html","id":"proportional-symbols","dir":"Articles","previous_headings":"Examples of thematic maps","what":"Proportional Symbols","title":"mapsf","text":"mf_map(x, var, type = \"prop\") displays symbols areas proportional quantitative variable (stocks). inches argument used customize symbols sizes.","code":"library(mapsf) # import the sample data set mtq <- mf_get_mtq() # set a theme mf_theme(\"darkula\") # plot a shadow mf_shadow(mtq) # plot municipalities mf_map(mtq, add = TRUE) # plot population mf_map(   x = mtq,   var = \"POP\",   type = \"prop\",   inches = 0.25,   col = \"brown4\",   leg_pos = \"topright\",   leg_adj = c(0, -2),   leg_title = \"Total population\" ) # layout mf_layout(   title = \"Population Distribution in Martinique\",   credits = paste0(     \"Sources: Insee and IGN, 2018\\n\",     \"mapsf \",     packageVersion(\"mapsf\")   ) )"},{"path":"/articles/mapsf.html","id":"choropleth-map","dir":"Articles","previous_headings":"Examples of thematic maps","what":"Choropleth Map","title":"mapsf","text":"choropleth maps, areas shaded according variation quantitative variable. used represent ratios indices.mf_map(x, var, type = \"choro\") displays choropleth maps . Arguments nbreaks, breaks allow customize variable classification. mf_get_breaks() allows classify data outside function . Colors palettes, defined pal, can created mf_get_pal() can use palette names hcl.pals(). Use mf_theme() set theme without plotting anything.","code":"library(mapsf) # import the sample data set mtq <- mf_get_mtq() # population density (inhab./km2) using sf::st_area() mtq$POPDENS <- 1e6 * mtq$POP / sf::st_area(mtq) # set a theme mf_theme(\"green\") # plot population density mf_map(   x = mtq,   var = \"POPDENS\",   type = \"choro\",   breaks = \"geom\",   nbreaks = 5,   pal = \"Greens\",   border = \"white\",   lwd = 0.5,   leg_pos = \"topright\",   leg_title = \"Population Density\\n(people per km2)\" ) # layout mf_layout(   title = \"Population Distribution in Martinique\",   credits = paste0(     \"Sources: Insee and IGN, 2018\\n\",     \"mapsf \",     packageVersion(\"mapsf\")   ) )"},{"path":"/articles/mapsf.html","id":"typology-map","dir":"Articles","previous_headings":"Examples of thematic maps","what":"Typology Map","title":"mapsf","text":"mf_map(x, var, type = \"typo\") displays typology map qualitative variable. val_order used set modalities order legend. mf_label() displays labels map.","code":"library(mapsf) # import the sample data set mtq <- mf_get_mtq() # set theme mf_theme(\"dark\") # plot administrative status mf_map(   x = mtq,   var = \"STATUS\",   type = \"typo\",   pal = c(\"aquamarine4\", \"yellow3\", \"wheat\"),   lwd = .5,   val_order = c(     \"Prefecture\",     \"Sub-prefecture\",     \"Simple municipality\"   ),   leg_pos = \"topright\",   leg_adj = c(0, 1),   leg_title = \"\" ) # labels for a few  municipalities mf_label(   x = mtq[mtq$STATUS != \"Simple municipality\", ], var = \"LIBGEO\",   cex = 0.9, halo = TRUE, r = 0.15 ) # layout mf_layout(   title = \"Administrative Status\",   credits = paste0(     \"Sources: Insee and IGN, 2018\\n\",     \"mapsf \",     packageVersion(\"mapsf\")   ) )"},{"path":"/articles/mapsf.html","id":"proportional-symbols-using-choropleth-coloration","dir":"Articles","previous_headings":"Examples of thematic maps","what":"Proportional Symbols using Choropleth Coloration","title":"mapsf","text":"mf_map(x, var, type = \"prop_choro\") creates map symbols proportional values first variable colored reflect classification second variable. expandBB argument mf_map() allows expand map space. , increase space available right map avoid overlaps legends map.","code":"library(mapsf) # import the sample data set mtq <- mf_get_mtq() # set theme mf_theme(\"candy\") # Plot the municipalities and expand the map space on the right mf_map(x = mtq, expandBB = c(0, 0, 0, .15)) # Plot symbols with choropleth coloration mf_map(   x = mtq,   var = c(\"POP\", \"MED\"),   type = \"prop_choro\",   border = \"grey50\",   lwd = 1,   leg_pos = c(\"topright\"),   leg_title = c(\"Population\", \"Median Income\\n(in euros)\"),   breaks = \"equal\",   nbreaks = 4,   pal = \"Greens\",   leg_val_rnd = c(0, -2),   leg_frame = TRUE ) # layout mf_layout(   title = \"Population & Wealth in Martinique, 2015\",   credits = paste0(     \"Sources: Insee and IGN, 2018\\n\",     \"mapsf \",     packageVersion(\"mapsf\")   ),   frame = TRUE )"},{"path":"/articles/mapsf.html","id":"proportional-symbols-using-typology-coloration","dir":"Articles","previous_headings":"Examples of thematic maps","what":"Proportional Symbols using Typology Coloration","title":"mapsf","text":"mf_map(x, var, type = \"prop_typo\") creates map symbols proportional values first variable colored reflect modalities second qualitative variable.","code":"library(mapsf) # import the sample data set mtq <- mf_get_mtq() # set theme mf_theme(\"ink\") # plot the municipalities and expand the map space on the right mf_map(x = mtq, expandBB = c(0, 0, 0, .15)) # plot symbols with choropleth coloration mf_map(   x = mtq,   var = c(\"POP\", \"STATUS\"),   type = \"prop_typo\",   symbol = \"square\",   border = \"white\",   lwd = .5,   leg_pos = \"topright\",   leg_title = c(\"Population\", \"Administrative\\nStatus\"),   val_order = c(     \"Prefecture\", \"Sub-prefecture\",     \"Simple municipality\"   ) ) # layout mf_layout(   title = \"Population Distribution in Martinique\",   credits = paste0(     \"Sources: Insee and IGN, 2018\\n\",     \"mapsf \",     packageVersion(\"mapsf\")   ) )"},{"path":"/articles/mapsf.html","id":"label-map","dir":"Articles","previous_headings":"Examples of thematic maps","what":"Label Map","title":"mapsf","text":"mf_label() dedicated display labels map. overlap = FALSE argument displays non overlapping labels. example built custom theme mf_theme().","code":"library(mapsf) # import the sample data set mtq <- mf_get_mtq() # set theme my_theme <- list(   name = \"mytheme\",   bg = \"lightblue1\",   fg = \"darkseagreen4\",   mar = c(0, 0, 0, 0),   tab = TRUE,   pos = \"left\",   inner = TRUE,   line = 1,   cex = .9,   font = 3 ) mf_theme(my_theme) # plot municipalities mf_map(mtq, col = \"#e4e9de\", border = \"darkseagreen4\") # plot labels mf_label(   x = mtq,   var = \"LIBGEO\",   col = \"black\",   cex = 0.7,   font = 4,   halo = TRUE,   bg = \"white\",   r = 0.1,   overlap = FALSE,   lines = FALSE ) # layout mf_layout(   title = \"Municipalities of Martinique\",   credits = paste0(     \"Sources: Insee and IGN, 2018\\n\",     \"mapsf \",     packageVersion(\"mapsf\")   ),   arrow = FALSE ) # north arrow mf_arrow(pos = \"topright\")"},{"path":"/articles/mapsf.html","id":"links-map","dir":"Articles","previous_headings":"Examples of thematic maps","what":"Links Map","title":"mapsf","text":"mf_get_links() creates link layer sf object link data.frame (long format). mf_map(x, var, type = \"grad\") displays graduated links.","code":"library(mapsf) # import the sample data set mtq <- mf_get_mtq() # import the csv file embedded in mapsf mob <- read.csv(system.file(\"csv/mob.csv\", package = \"mapsf\")) # Select links from Fort-de-France (97209)) mob_97209 <- mob[mob$i == 97209, ] # create an sf object of links mob_links <- mf_get_links(x = mtq, df = mob_97209) # set theme mf_theme(\"jsk\") # Plot the municipalities mf_map(mtq) # plot graduated links mf_map(   x = mob_links,   var = \"fij\",   type = \"grad\",   breaks = c(100, 500, 1000, 4679.0),   lwd = c(1, 4, 8),   leg_pos = \"topright\",   leg_title = \"Nb. of\\nCommuters\",   col = \"red4\",   leg_frame = TRUE ) # map layout mf_layout(   title = \"Commuting to Fort-de-France\",   credits = paste0(     \"Sources: Insee and IGN, 2018\\n\",     \"mapsf \",     packageVersion(\"mapsf\")   ),   arrow = FALSE )"},{"path":"/articles/web_only/how_to_create_inset_maps.html","id":"size-and-position","dir":"Articles > Web_only","previous_headings":"","what":"Size and Position","title":"How to Create Inset Maps","text":"2 solutions defining size position inset. first solution based x, pos cex arguments: x sf object, width/height ratio inset match width/height ratio x bounding box; pos must one “bottomleft”, “left”, “topleft”, “top”, “bottom”, “bottomright”, “right” ”topright”; cex defines share map width covered inset (0.5 means 50%). following example create inset specific municipality topright corner map.  inset opened, map elements can added . add title, shadow, scale bar, Martinique municipalities frame.  second solution set size position inset use fig argument.fig coordinates (xmin, xmax, ymin, ymax) expressed fractions mapping space (.e. excluding margins).mf_inset_on(fig = c(0, 0.25, 0, 0.25)) create inset bottomleft corner map cover quarter map width height. following example create inset specific municipality bottom left corner map.","code":"library(mapsf) # set a theme mf_theme(\"default\", mar = c(0, 0, 0, 0)) # data import mtq <- mf_get_mtq() # Selection of a target municipality to display in the inset mtq_target <- mtq[c(26), ] # Display the base map mf_map(mtq, expandBB = c(0, 0, 0, .25)) # display the target on the main map mf_map(mtq_target, add = TRUE, col = \"tomato\") # open the inset mf_inset_on(x = mtq_target, pos = \"topright\", cex = .3) # display the target municipality mf_map(mtq_target, add = FALSE, col = \"tomato\") # close the inset mf_inset_off() # set a theme mf_theme(\"dark\") # Selection of a target municipality to display in the inset mtq_target <- mtq[c(26), ] # Display the base map mf_map(mtq, expandBB = c(0, 0, 0, .25)) # display the target on the main map mf_map(mtq_target, add = TRUE, col = \"tomato\") # open the inset mf_inset_on(x = mtq_target, pos = \"topright\", cex = .3) # center on on the target munucipality mf_map(mtq_target, col = NA, border = NA) # display all municipalities mf_map(mtq, add = TRUE) # display the target municipality shadow mf_shadow(mtq_target, add = TRUE) # display the target municipality mf_map(mtq_target, add = TRUE, col = \"tomato\") # display a title mf_title(\"Saint-Anne\",   pos = \"left\", tab = TRUE,   cex = .9, line = 1, inner = TRUE ) # display a scale bar mf_scale(size = 2) # dispaly a frame around the inset box() # close the inset mf_inset_off() # display the map layout of the main map mf_title(\"Martinique Municipalities\") # display a scale bar mf_scale(size = 5) # display credits mf_credits(txt = \"T. Giraud, 2021\") # set a theme mf_theme(\"default\", mar = c(0, 0, 0, 0)) # Display the base map mf_map(mtq) # open the inset mf_inset_on(fig = c(0, 0.25, 0, 0.25)) # display a municipality mf_map(mtq[9, ]) # add a frame box() # close the inset mf_inset_off()"},{"path":"/articles/web_only/how_to_create_inset_maps.html","id":"world-map-inset","dir":"Articles > Web_only","previous_headings":"","what":"World Map Inset","title":"How to Create Inset Maps","text":"easy create inset world map (see mf_worldmap()) using x = \"worldmap\".","code":"mf_map(mtq) mf_inset_on(x = \"worldmap\") mf_worldmap(mtq) mf_inset_off()"},{"path":"/articles/web_only/how_to_create_inset_maps.html","id":"non-cartographic-insets","dir":"Articles > Web_only","previous_headings":"","what":"Non-cartographic Insets","title":"How to Create Inset Maps","text":"Insets can used regular plots. next map create inset histogram median income distribution using map classification.","code":"# create classes bks <- mf_get_breaks(x = mtq$MED, nbreaks = 5, breaks = \"quantile\") bks <- round(bks, digits = -2) # define a color palette pal <- hcl.colors(n = 5, palette = \"Dark Mint\", rev = TRUE) # set a theme mf_theme(\"candy\") fg <- getOption(\"mapsf.fg\") # Create the map mf_map(   x = mtq, var = \"MED\", type = \"choro\",   pal = pal, breaks = bks, leg_pos = NA ) # start the inset mf_inset_on(fig = c(0.75, .95, 0.84, .99)) # draw the histogram par(mar = c(0, 0, 1.7, 0)) hist(mtq$MED,   breaks = bks, col = pal, border = fg, axes = FALSE, labels = \"\",   xlab = \"\", ylab = \"\", main = \"\" ) axis(   side = 1, at = bks, las = 2, tick = FALSE, line = -.9,   cex.axis = .7, col.axis = fg ) title(\"Median Income\\nin euros\",   cex.main = .8, col.main = fg,   font.main = 1, adj = 0 ) # close the inset mf_inset_off() # Add map layout mf_title(\"Wealth in Martinique, 2015\", pos = \"left\") mf_scale(5) mf_credits(paste0(   \"Sources: Insee and IGN, 2018\\n\",   \"mapsf \", packageVersion(\"mapsf\") ))"},{"path":"/articles/web_only/how_to_export_maps.html","id":"simple-export","dir":"Articles > Web_only","previous_headings":"","what":"Simple Export","title":"How to Export Maps","text":"example set width exported figure.  Note set add = TRUE first layer plotted. Internally, mf_export() start device (PNG SVG) specific dimension (figure size) extent (x extent).","code":"library(mapsf) mtq <- mf_get_mtq() mf_export(   x = mtq,   filename = \"fixed_width.png\",   width = 500 ) mf_map(mtq, add = TRUE) mf_title(txt = \"PNG export: width=500px, height=605px (deduced)\") dev.off()"},{"path":"/articles/web_only/how_to_export_maps.html","id":"export-with-extra-space-on-the-figure","dir":"Articles > Web_only","previous_headings":"","what":"Export with Extra Space on the Figure","title":"How to Export Maps","text":"added space right side plot (50% x width).  Note mf_export() uses current theme. theme set mf_export() call dev.() call correctly applied.","code":"mf_theme(\"dark\") mf_export(   x = mtq,   filename = \"fixed_width_expand.png\",   width = 500,   expandBB = c(0, 0, 0, .5), ) mf_map(mtq, add = TRUE) mf_title(txt = \"PNG export: width=500px, height=432px (deduced)\") dev.off() mf_theme(NULL)"},{"path":"/articles/web_only/how_to_export_maps.html","id":"center-the-map-on-a-specific-area","dir":"Articles > Web_only","previous_headings":"","what":"Center the Map on a Specific Area","title":"How to Export Maps","text":"export, map focused specific spatial object. height fixed width deduced.","code":"target <- mtq[5, ] mf_export(x = target, filename = \"fixed_height_centered.png\", height = 600) mf_map(mtq, add = TRUE) mf_shadow(target, add = TRUE) mf_map(target, add = TRUE) mf_title(txt = \"PNG export: height=600px, width=433px (deduced)\") mf_scale(1, pos = \"bottomleft\") dev.off()"},{"path":"/articles/web_only/how_to_export_maps.html","id":"other-parameters","dir":"Articles > Web_only","previous_headings":"","what":"Other Parameters","title":"How to Export Maps","text":"mf_export() can produce SVG figures (export = \"svg\") use parameters png() svg() functions (e.g. res, bg family).","code":"mf_theme(\"nevermind\") mf_export(   x = mtq,   filename = \"fixed_width.svg\",   width = 5,   bg = \"black\" ) mf_map(mtq, add = TRUE) mf_title(txt = \"SVG export: bg = 'black'\") dev.off() mf_theme(NULL)"},{"path":"/articles/web_only/how_to_use_themes.html","id":"builtin-themes","dir":"Articles > Web_only","previous_headings":"","what":"Builtin themes","title":"How to Use Themes","text":"builtin themes. added grey background color make margins visible. following table displays parameters themes.","code":""},{"path":"/articles/web_only/how_to_use_themes.html","id":"how-to-modify-an-existing-theme","dir":"Articles > Web_only","previous_headings":"","what":"How to modify an existing theme","title":"How to Use Themes","text":"possible modify existing theme. example use “default” theme modify title parameters.","code":"library(mapsf) mtq <- mf_get_mtq() mf_theme(\"default\", tab = FALSE, font = 4) mf_map(mtq) mf_title('Mofified \"default\" theme')"},{"path":"/articles/web_only/how_to_use_themes.html","id":"how-to-create-a-new-theme","dir":"Articles > Web_only","previous_headings":"","what":"How to create a new theme","title":"How to Use Themes","text":"possible create new theme.  also possible assign theme variable.","code":"mf_theme(   bg = \"lightblue\", fg = \"tomato1\", mar = c(0, 2, 0, 2),   tab = TRUE, inner = TRUE, line = 1.3, pos = \"center\",   cex = 1.1, font = 3 ) mf_map(mtq) mf_title(\"New theme\") blue_theme <- mf_theme(\"dark\", bg = \"lightblue\") green_theme <- mf_theme(\"default\", bg = \"lightgreen\") mf_theme(blue_theme) mf_map(mtq) mf_title(\"Blue Theme\") mf_theme(green_theme) mf_map(mtq) mf_title(\"Green Theme\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothée Giraud. Maintainer, author. Hugues Pecout. Contributor.            Logo Ronan Ysebaert. Contributor.            Cheat sheet Ian Fellows. Copyright holder.            overlap algorithm labels, wordcloud package Jim Lemon. Copyright holder.            Arc drawing algorithm annotations, plotrix package","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Giraud T (2023). mapsf: Thematic Cartography. R package version 0.8.0, https://riatelab.github.io/mapsf/.","code":"@Manual{,   title = {mapsf: Thematic Cartography},   author = {Timothée Giraud},   year = {2023},   note = {R package version 0.8.0},   url = {https://riatelab.github.io/mapsf/}, }"},{"path":"/index.html","id":"mapsf-","dir":"","previous_headings":"","what":"mapsf: thematic cartography","title":"mapsf: thematic cartography","text":"Create integrate thematic maps R workflow. package helps design various cartographic representations proportional symbols, choropleth typology maps. also offers several functions display layout elements improve graphic presentation maps (e.g. scale bar, north arrow, title, labels). mapsf maps sf objects base graphics.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"mapsf: thematic cartography","text":"can install released version mapsf CRAN : Alternatively, can install development version mapsf GitHub (dev branch) :","code":"install.packages(\"mapsf\") remotes::install_github(\"riatelab/mapsf\", ref = \"dev\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"mapsf: thematic cartography","text":"basic example shows create map mapsf. main mapsf function mf_map().  detailed example:","code":"library(mapsf) # Import the sample dataset mtq <- mf_get_mtq() # Plot the base map mf_map(x = mtq) # Plot proportional symbols mf_map(x = mtq, var = \"POP\", type = \"prop\", leg_pos = \"topright\") # Plot a map layout mf_layout(   title = \"Population in Martinique\",   credits = \"T. Giraud; Sources: INSEE & IGN, 2018\" ) # Export a map with a theme and extra margins mf_theme(\"green\") mf_export(   x = mtq, filename = \"mtq.png\",   width = 600, res = 120,   expandBB = c(0, 0, 0, .3) ) # Plot a shadow mf_shadow(mtq, col = \"grey10\", add = TRUE) # Plot a choropleth map mf_map(   x = mtq, var = \"MED\", type = \"choro\",   pal = \"Dark Mint\",   breaks = \"quantile\",   nbreaks = 6,   leg_title = \"Median Income\\n(euros)\",   leg_val_rnd = -2,   add = TRUE ) # Start an inset map mf_inset_on(x = \"worldmap\", pos = \"right\") # Plot mtq position on a worldmap mf_worldmap(mtq, col = \"#0E3F5C\") # Close the inset mf_inset_off() # Plot a title mf_title(\"Wealth in Martinique, 2015\") # Plot credits mf_credits(\"T. Giraud\\nSources: INSEE & IGN, 2018\") # Plot a scale bar mf_scale(size = 5) # Plot a north arrow mf_arrow(\"topleft\") dev.off()"},{"path":"/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"mapsf: thematic cartography","text":"Cheat Sheet  Website mapsf, New Package Thematic Mapping - useR 2021! Video & Slides - FOSS4G 2021 Video & Slides (EN) Créer des cartes reproductibles avec mapsf - Les lundis de l’Ined - Slides (FR)","code":""},{"path":"/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"mapsf: thematic cartography","text":"mapsf successor cartography. plans new features enhancements cartography, basic maintenance support continue indefinitely. Existing projects use cartography can safely continue use cartography. New projects use mapsf friendlier, lighter robust. See mapsf vignette migrate cartography mapsf.","code":""},{"path":"/index.html","id":"alternatives","dir":"","previous_headings":"","what":"Alternatives","title":"mapsf: thematic cartography","text":"cartography (superseded mapsf) tmap ggplot2 + ggspatial","code":""},{"path":"/index.html","id":"community-guidelines","dir":"","previous_headings":"","what":"Community Guidelines","title":"mapsf: thematic cartography","text":"One can contribute package pull requests report issues ask questions . project uses conventional commits semantic versioning.","code":""},{"path":"/reference/mapsf.html","id":null,"dir":"Reference","previous_headings":"","what":"Package description — mapsf","title":"Package description — mapsf","text":"Create integrate thematic maps workflow. package helps design various cartographic representations proportional symbols, choropleth typology maps. also offers several functions display layout elements improve graphic presentation maps (e.g. scale bar, north arrow, title, labels). mapsf maps sf objects base graphics. \"Get Started\" vignette contains commented scripts create various maps: vignette(topic = \"mapsf\", package = \"mapsf\")","code":""},{"path":"/reference/mapsf.html","id":"symbology","dir":"Reference","previous_headings":"","what":"Symbology","title":"Package description — mapsf","text":"functions display cartographic layers. mf_map() Plot map mf_label() Plot labels mf_raster() Plot raster mf_graticule() Plot graticules","code":""},{"path":"/reference/mapsf.html","id":"map-layout","dir":"Reference","previous_headings":"","what":"Map layout","title":"Package description — mapsf","text":"functions dedicated map layout design. mf_init() Initialize map specific extent mf_theme() Set theme mf_shadow() Plot shadow mf_background() Plot background image mf_annotation() Plot annotation mf_arrow() Plot north arrow mf_credits() Plot credits mf_layout() Plot map layout mf_title() Plot title mf_scale() Plot scale bar mf_inset_on() / mf_inset_off() Plot inset mf_worldmap() Plot point world map mf_legend() Plot legend","code":""},{"path":"/reference/mapsf.html","id":"utility-functions","dir":"Reference","previous_headings":"","what":"Utility functions","title":"Package description — mapsf","text":"mf_export() Export map mf_distr() Plot distribution mf_get_links() Get link layer data.frame links mf_get_pal() Get color palettes mf_get_breaks() Get class intervals mf_get_mtq() Get 'mtq' dataset mf_get_ratio() Get map width height values","code":""},{"path":[]},{"path":"/reference/mapsf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Package description — mapsf","text":"Maintainer: Timothée Giraud timothee.giraud@cnrs.fr (ORCID) contributors: Hugues Pecout (ORCID) (Logo) [contributor] Ronan Ysebaert (ORCID) (Cheat sheet) [contributor] Ian Fellows (overlap algorithm labels, wordcloud package) [copyright holder] Jim Lemon (Arc drawing algorithm annotations, plotrix package) [copyright holder]","code":""},{"path":"/reference/mf_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an annotation — mf_annotation","title":"Plot an annotation — mf_annotation","text":"Plot annotation map.","code":""},{"path":"/reference/mf_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an annotation — mf_annotation","text":"","code":"mf_annotation(   x,   txt,   pos = \"topright\",   cex = 0.8,   col_arrow,   col_txt,   halo = FALSE,   bg,   s = 1,   ... )"},{"path":"/reference/mf_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an annotation — mf_annotation","text":"x sf object 1 row, couple coordinates (c(x, y)) \"interactive\" txt text display pos position text, one \"topleft\", \"topright\", \"bottomright\", \"bottomleft\" cex size text col_arrow arrow color col_txt text color halo add halo around text bg halo color s arrow size (min=1) ... text arguments.","code":""},{"path":"/reference/mf_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an annotation — mf_annotation","text":"return value, annotation displayed.","code":""},{"path":"/reference/mf_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an annotation — mf_annotation","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_annotation(   x = c(711167.8, 1614764),   txt = \"Look!\\nImportant feature\\nhere!\",   pos = \"bottomleft\", cex = 1.2, font = 2,   halo = TRUE, s = 1.5 )  mf_annotation(   x = mtq[20, ],   txt = \"This is less\\nimportant\",   cex = .7, font = 3, s = 1.3 )"},{"path":"/reference/mf_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a north arrow — mf_arrow","title":"Plot a north arrow — mf_arrow","text":"Plot north arrow.","code":""},{"path":"/reference/mf_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a north arrow — mf_arrow","text":"","code":"mf_arrow(pos = \"topleft\", col, adjust)"},{"path":"/reference/mf_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a north arrow — mf_arrow","text":"pos position. can one 'topleft', 'top','topright', 'right', 'bottomright', 'bottom','bottomleft', 'left', 'interactive' vector two coordinates map units (c(x, y)) col arrow color adjust object class sf sfc used adjust arrow real north","code":""},{"path":"/reference/mf_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a north arrow — mf_arrow","text":"return value, north arrow displayed.","code":""},{"path":"/reference/mf_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a north arrow — mf_arrow","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_arrow(pos = \"topright\")"},{"path":"/reference/mf_background.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a background image — mf_background","title":"Plot a background image — mf_background","text":"Plot background image existing plot","code":""},{"path":"/reference/mf_background.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a background image — mf_background","text":"","code":"mf_background(filename, ...)"},{"path":"/reference/mf_background.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a background image — mf_background","text":"filename filename background image, PNG JPG/JPEG format. ... parameters rasterImage","code":""},{"path":"/reference/mf_background.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a background image — mf_background","text":"return value, background image displayed.","code":""},{"path":"/reference/mf_background.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a background image — mf_background","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq, col = NA, border = NA) mf_background(system.file(\"img/background.jpg\", package = \"mapsf\")) mf_map(mtq, lwd = 3, col = NA, border = \"white\", add = TRUE) mf_credits(   txt = \"Background photo by Noita Digital on Unsplash\",   col = \"white\" )"},{"path":"/reference/mf_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an sf object — mf_base","title":"Plot an sf object — mf_base","text":"Plot sf object. mostly wrapper around plot(st_geometry(x), ...).","code":""},{"path":"/reference/mf_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an sf object — mf_base","text":"","code":"mf_base(   x,   col = \"grey80\",   border = \"grey20\",   bg = \"white\",   cex = 1,   pch = 20,   lwd = 0.7,   lty = 1,   add = FALSE,   ... )"},{"path":"/reference/mf_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an sf object — mf_base","text":"x object class sf, sfc sfg col color border border color bg background color cex point size pch pch (point type) symbols lwd border width lty line border type add whether add layer existing plot (TRUE) (FALSE) ... parameters plot sfc objects","code":""},{"path":"/reference/mf_base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an sf object — mf_base","text":"x (invisibly) returned.","code":""},{"path":"/reference/mf_base.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an sf object — mf_base","text":"","code":"library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE mtq <- mf_get_mtq() mf_base(mtq)  mf_base(mtq, col = \"blue\")"},{"path":"/reference/mf_choro.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a choropleth map — mf_choro","title":"Plot a choropleth map — mf_choro","text":"Plot choropleth map.","code":""},{"path":"/reference/mf_choro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a choropleth map — mf_choro","text":"","code":"mf_choro(   x,   var,   pal = \"Mint\",   alpha = 1,   rev = FALSE,   breaks = \"quantile\",   nbreaks,   border = getOption(\"mapsf.fg\"),   pch = 21,   cex = 1,   lwd = 0.7,   col_na = \"white\",   cex_na = 1,   pch_na = 4,   leg_pos = mf_get_leg_pos(x),   leg_title = var,   leg_title_cex = 0.8,   leg_val_cex = 0.6,   leg_val_rnd = 2,   leg_no_data = \"No data\",   leg_frame = FALSE,   leg_horiz = FALSE,   leg_adj = c(0, 0),   leg_size = 1,   leg_box_border = getOption(\"mapsf.fg\"),   leg_box_cex = c(1, 1),   leg_fg = getOption(\"mapsf.fg\"),   leg_bg = getOption(\"mapsf.bg\"),   leg_frame_border = getOption(\"mapsf.fg\"),   add = FALSE )"},{"path":"/reference/mf_choro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a choropleth map — mf_choro","text":"x object class sf var name(s) variable(s) plot pal set colors palette name (hcl.colors) alpha pal hcl.colors palette name, alpha-transparency level range [0,1] rev pal hcl.colors palette name, whether ordering colors reversed (TRUE) (FALSE) breaks either numeric vector actual breaks, classification method name (see mf_get_breaks Details) nbreaks number classes border border color pch pch type pch x POINT layer cex cex cex symbols x POINT layer lwd border width col_na color missing values cex_na cex NA values x POINT layer pch_na pch NA values x POINT layer leg_pos position legend, one 'topleft', 'top','topright', 'right', 'bottomright', 'bottom', 'bottomleft', 'left' vector two coordinates map units (c(x, y)). leg_pos = NA legend plotted. leg_pos = 'interactive' click onthe map choose legend position. leg_title legend title leg_title_cex size legend title leg_val_cex size values legend leg_val_rnd number decimal places values legend leg_no_data label missing values leg_frame whether add frame legend (TRUE) (FALSE) leg_horiz display legend horizontally (proportional symbols choropleth types) leg_adj adjust postion legend x y directions leg_size size legend; 2 means two times bigger leg_box_border border color legend boxes leg_box_cex width height size expansion boxes leg_fg color legend foreground leg_bg color legend backgournd leg_frame_border border color legend frame add whether add layer existing plot (TRUE) (FALSE)","code":""},{"path":"/reference/mf_choro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a choropleth map — mf_choro","text":"x (invisibly) returned.","code":""},{"path":"/reference/mf_choro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a choropleth map — mf_choro","text":"Breaks defined numeric vector classification method left-closed: breaks defined c(2, 5, 10, 15, 20) mapped [2 - 5[, [5 - 10[, [10 - 15[, [15 - 20]. \"jenks\" method exception right-closed. Jenks breaks computed c(2, 5, 10, 15, 20) mapped [2 - 5], ]5 - 10], ]10 - 15], ]15 - 20].","code":""},{"path":"/reference/mf_choro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a choropleth map — mf_choro","text":"","code":"mtq <- mf_get_mtq() mf_choro(mtq, \"MED\")   mtq[6, \"MED\"] <- NA mf_choro(   x = mtq, var = \"MED\", col_na = \"grey\", pal = \"Cividis\",   breaks = \"quantile\", nbreaks = 4, border = \"white\",   lwd = .5, leg_pos = \"topleft\",   leg_title = \"Median Income\", leg_title_cex = 1.1,   leg_val_cex = 1, leg_val_rnd = -2, leg_no_data = \"No data\",   leg_frame = TRUE )"},{"path":"/reference/mf_credits.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot credits — mf_credits","title":"Plot credits — mf_credits","text":"Plot credits (sources, author, year...).","code":""},{"path":"/reference/mf_credits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot credits — mf_credits","text":"","code":"mf_credits(   txt = \"Source(s) & Author(s)\",   pos = \"bottomleft\",   col,   cex = 0.6,   font = 3,   bg = NA )"},{"path":"/reference/mf_credits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot credits — mf_credits","text":"txt text credits, use '\\n' add line breaks pos position, one 'bottomleft', 'bottomright' 'rightbottom' col color cex cex credits font font credits bg background color","code":""},{"path":"/reference/mf_credits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot credits — mf_credits","text":"return value, credits displayed.","code":""},{"path":"/reference/mf_credits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot credits — mf_credits","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_credits(txt = \"Author\\nSources - Year\")"},{"path":"/reference/mf_distr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a distribution — mf_distr","title":"Plot a distribution — mf_distr","text":"function displays histogram, box plot, strip chart density curve plot.","code":""},{"path":"/reference/mf_distr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a distribution — mf_distr","text":"","code":"mf_distr(x, nbins, bw)"},{"path":"/reference/mf_distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a distribution — mf_distr","text":"x numeric variable nbins number bins histogram bw bandwidth density curve","code":""},{"path":"/reference/mf_distr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a distribution — mf_distr","text":"number bins histogram bandwidth density curve (invisibly) returned list.","code":""},{"path":"/reference/mf_distr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a distribution — mf_distr","text":"","code":"(mf_distr(rnorm(1000)))  #> $bw #> [1] 0.2216356 #>  #> $nbins #> [1] 14 #>  mf_distr(rbeta(1000, .6, 7))  mf_distr(rbeta(1000, 5, .6))"},{"path":"/reference/mf_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a map — mf_export","title":"Export a map — mf_export","text":"Export map extent spatial object. map exported PNG SVG format. one width height set, mf_export uses width/height ratio x bounding box find matching ratio export. Always use add = TRUE mf_map calls following mf_export call. Use dev.finish export (see Examples).","code":""},{"path":"/reference/mf_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a map — mf_export","text":"","code":"mf_export(   x,   filename = \"map.png\",   width,   height,   res = 96,   ...,   expandBB = rep(0, 4),   theme,   export = \"png\" )"},{"path":"/reference/mf_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a map — mf_export","text":"x object class sf, sfc SpatRaster filename path exported file. file extention \".png\" png graphic device opened, file extension \".svg\" svg graphic device opened. width width figure (pixels png, inches svg) height height figure (pixels png, inches svg) res resolution (png) ... parameters png svg export expandBB fractional values expand bounding box , direction (bottom, left, top, right) theme apply theme (deprecated) export deprecated","code":""},{"path":"/reference/mf_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a map — mf_export","text":"return value, map file initiated (PNG SVG format).","code":""},{"path":"/reference/mf_export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a map — mf_export","text":"","code":"mtq <- mf_get_mtq() (filename <- tempfile(fileext = \".png\")) #> [1] \"/tmp/RtmpOamX5h/file1bcf2aba31df.png\" mf_export(mtq, filename = filename) mf_map(mtq, add = TRUE) dev.off() #> agg_png  #>       2"},{"path":"/reference/mf_get_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get class intervals — mf_get_breaks","title":"Get class intervals — mf_get_breaks","text":"function classify continuous variables.","code":""},{"path":"/reference/mf_get_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get class intervals — mf_get_breaks","text":"","code":"mf_get_breaks(x, nbreaks, breaks, k = 1, central = FALSE, ...)"},{"path":"/reference/mf_get_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get class intervals — mf_get_breaks","text":"x vector numeric values. NA Inf values used classification. nbreaks number classes breaks classification method; one \"fixed\", \"sd\", \"equal\", \"pretty\", \"quantile\", \"kmeans\", \"hclust\", \"bclust\", \"fisher\", \"jenks\", \"dpih\", \"q6\", \"geom\",  \"arith\", \"em\" \"msd\" (see Details). k number standard deviation \"msd\" method (see Details) central creation central class \"msd\" method (see Details) ... arguments classIntervals","code":""},{"path":"/reference/mf_get_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get class intervals — mf_get_breaks","text":"numeric vector breaks","code":""},{"path":"/reference/mf_get_breaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get class intervals — mf_get_breaks","text":"\"fixed\", \"sd\", \"equal\", \"pretty\", \"quantile\", \"kmeans\", \"hclust\", \"bclust\", \"fisher\", \"jenks\" \"dpih\" classIntervals methods. may need pass additional arguments . Jenks (\"jenks\" method) Fisher (\"fisher\" method) algorithms based principle give quite similar results Fisher much faster.  \"q6\" method uses following quantile probabilities: 0, 0.05, 0.275, 0.5, 0.725, 0.95, 1. \"geom\" method based geometric progression along variable values, values must strictly greater zero. \"arith\" method based arithmetic progression along variable values. \"em\" method based nested averages computation. \"msd\" method based mean standard deviation numeric vector. nbreaks parameter relevant, use k central instead. k indicates extent class share standard deviation. central=TRUE mean value center class else mean break value.","code":""},{"path":"/reference/mf_get_breaks.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get class intervals — mf_get_breaks","text":"function mainly wrapper classIntervals + \"arith\", \"em\", \"q6\", \"geom\" \"msd\" methods.","code":""},{"path":[]},{"path":"/reference/mf_get_breaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get class intervals — mf_get_breaks","text":"","code":"mtq <- mf_get_mtq() mf_get_breaks(x = mtq$MED, nbreaks = 6, breaks = \"quantile\") #> [1] 11929.0 13667.0 14786.0 15685.5 16860.0 18622.0 21761.0"},{"path":"/reference/mf_get_leg_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the optimal position of a legend — mf_get_leg_pos","title":"Get the optimal position of a legend — mf_get_leg_pos","text":"Find optimal one two legends. optimal position position minimizes overlap spatial object legend.","code":""},{"path":"/reference/mf_get_leg_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the optimal position of a legend — mf_get_leg_pos","text":"","code":"mf_get_leg_pos(x, n = 1)"},{"path":"/reference/mf_get_leg_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the optimal position of a legend — mf_get_leg_pos","text":"x object class sf n number positions get (1 2)","code":""},{"path":"/reference/mf_get_leg_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the optimal position of a legend — mf_get_leg_pos","text":"vector position returned","code":""},{"path":"/reference/mf_get_leg_pos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the optimal position of a legend — mf_get_leg_pos","text":"","code":"mtq <- mf_get_mtq() mf_get_leg_pos(mtq) #> [1] \"topright\""},{"path":"/reference/mf_get_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a link layer from a data.frame of links — mf_get_links","title":"Get a link layer from a data.frame of links — mf_get_links","text":"Create link layer data.frame links sf object.","code":""},{"path":"/reference/mf_get_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a link layer from a data.frame of links — mf_get_links","text":"","code":"mf_get_links(x, df, x_id, df_id)"},{"path":"/reference/mf_get_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a link layer from a data.frame of links — mf_get_links","text":"x sf object, simple feature collection. df data.frame contains identifiers starting ending points. x_id name identifier variable x, default first column (optional) df_id names identifier variables df, character vector length 2, default two first columns. (optional)","code":""},{"path":"/reference/mf_get_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a link layer from a data.frame of links — mf_get_links","text":"sf object returned, composed df sfc (LINESTRING) links.","code":""},{"path":"/reference/mf_get_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a link layer from a data.frame of links — mf_get_links","text":"","code":"mtq <- mf_get_mtq() mob <- read.csv(system.file(\"csv/mob.csv\", package = \"mapsf\")) # Select links from Fort-de-France (97209)) mob_97209 <- mob[mob$i == 97209, ] # Create a link layer mob_links <- mf_get_links(x = mtq, df = mob_97209) # Plot the links mf_map(mtq) mf_map(mob_links, col = \"red4\", lwd = 2, add = TRUE)"},{"path":"/reference/mf_get_mtq.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the 'mtq' dataset — mf_get_mtq","title":"Get the 'mtq' dataset — mf_get_mtq","text":"Import mtq dataset (Martinique municipalities).","code":""},{"path":"/reference/mf_get_mtq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the 'mtq' dataset — mf_get_mtq","text":"","code":"mf_get_mtq()"},{"path":"/reference/mf_get_mtq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the 'mtq' dataset — mf_get_mtq","text":"sf object Martinique municipalities","code":""},{"path":"/reference/mf_get_mtq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the 'mtq' dataset — mf_get_mtq","text":"wrapper around st_read(system.file(\"gpkg/mtq.gpkg\", package = \"mapsf\"),quiet = TRUE).","code":""},{"path":"/reference/mf_get_mtq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the 'mtq' dataset — mf_get_mtq","text":"","code":"mtq <- mf_get_mtq()"},{"path":"/reference/mf_get_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Get color palettes — mf_get_pal","title":"Get color palettes — mf_get_pal","text":"mf_get_pal builds sequential, diverging qualitative color palettes. Diverging color palettes can dissymmetric (different number colors two gradients).","code":""},{"path":"/reference/mf_get_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get color palettes — mf_get_pal","text":"","code":"mf_get_pal(n, palette, alpha = NULL, rev = c(FALSE, FALSE), neutral)"},{"path":"/reference/mf_get_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get color palettes — mf_get_pal","text":"n number colors (>= 1) palette. palette valid palette name (one hcl.pals()). name matched list available palettes, ignoring upper vs. lower case, spaces, dashes, etc. matching. alpha alpha-transparency level range [0,1] (0 means transparent 1 means opaque), see argument alpha hsv hcl, respectively. rev logical indicating whether ordering colors reversed. neutral color, two gradients used, 'neutral' color can added .","code":""},{"path":"/reference/mf_get_pal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get color palettes — mf_get_pal","text":"vector colors.","code":""},{"path":"/reference/mf_get_pal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get color palettes — mf_get_pal","text":"See hcl.pals get available palette names. two gradients used, 'neutral' color can added .","code":""},{"path":"/reference/mf_get_pal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get color palettes — mf_get_pal","text":"","code":"cols <- mf_get_pal(n = 10, pal = \"Reds 2\") plot(1:10, rep(1, 10), bg = cols, pch = 22, cex = 4)  cols <- mf_get_pal(n = c(3, 7), pal = c(\"Reds 2\", \"Greens\")) plot(1:10, rep(1, 10), bg = cols, pch = 22, cex = 4)  cols <- mf_get_pal(n = c(5, 5), pal = c(\"Reds 2\", \"Greens\")) plot(1:10, rep(1, 10), bg = cols, pch = 22, cex = 4)  cols <- mf_get_pal(n = c(7, 3), pal = c(\"Reds 2\", \"Greens\")) plot(1:10, rep(1, 10), bg = cols, pch = 22, cex = 4)  cols <- mf_get_pal(   n = c(5, 5), pal = c(\"Reds 2\", \"Greens\"),   neutral = \"grey\" ) plot(1:11, rep(1, 11), bg = cols, pch = 22, cex = 4)  opar <- par(bg = \"black\") cols <- mf_get_pal(   n = c(7, 3), pal = c(\"Reds 2\", \"Greens\"),   alpha = c(.3, .7) ) plot(1:10, rep(1, 10), bg = cols, pch = 22, cex = 4)  par(opar) cols <- mf_get_pal(   n = c(5, 5), pal = c(\"Reds 2\", \"Greens\"),   rev = c(TRUE, TRUE) ) plot(1:10, rep(1, 10), bg = cols, pch = 22, cex = 4)"},{"path":"/reference/mf_get_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Get map width and height values — mf_get_ratio","title":"Get map width and height values — mf_get_ratio","text":"function used get width height values maps created reports (*.Rmd, *.qmd). uses width / height ratio spatial object bounding box find matching ratio map. width specified, height deduced width / height ratio x, figure margins title size. height specified, width deduced width / height ratio x, figure margins title size.","code":""},{"path":"/reference/mf_get_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get map width and height values — mf_get_ratio","text":"","code":"mf_get_ratio(   x,   width,   height,   res = 96,   expandBB = rep(0, 4),   theme = mf_theme() )"},{"path":"/reference/mf_get_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get map width and height values — mf_get_ratio","text":"x object class sf, sfc SpatRaster width width figure (inches), use one width height height height figure (inches), use one width height res resolution expandBB fractional values expand bounding box , direction (bottom, left, top, right) theme theme used map","code":""},{"path":"/reference/mf_get_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get map width and height values — mf_get_ratio","text":"Width height returned inches.","code":""},{"path":"/reference/mf_get_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get map width and height values — mf_get_ratio","text":"","code":"mtq <- mf_get_mtq() mf_get_ratio(x = mtq, width = 5) #> [1] 5.00 6.06"},{"path":"/reference/mf_grad.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot graduated symbols — mf_grad","title":"Plot graduated symbols — mf_grad","text":"Plot graduated symbols based quantitative data.","code":""},{"path":"/reference/mf_grad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot graduated symbols — mf_grad","text":"","code":"mf_grad(   x,   var,   breaks = \"quantile\",   nbreaks = 3,   col = \"tomato4\",   border = getOption(\"mapsf.fg\"),   pch = 21,   cex,   lwd,   leg_pos = mf_get_leg_pos(x),   leg_title = var,   leg_title_cex = 0.8,   leg_val_cex = 0.6,   leg_val_rnd = 2,   leg_frame = FALSE,   leg_adj = c(0, 0),   leg_size = 1,   leg_border = border,   leg_box_cex = c(1, 1),   leg_fg = getOption(\"mapsf.fg\"),   leg_bg = getOption(\"mapsf.bg\"),   leg_frame_border = getOption(\"mapsf.fg\"),   add = TRUE )"},{"path":"/reference/mf_grad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot graduated symbols — mf_grad","text":"x object class sf var name(s) variable(s) plot breaks either numeric vector actual breaks, classification method name (see mf_get_breaks Details) nbreaks number classes col color border border color pch pch (point type) symbols cex cex (point size) symbols lwd border width leg_pos position legend, one 'topleft', 'top','topright', 'right', 'bottomright', 'bottom', 'bottomleft', 'left' vector two coordinates map units (c(x, y)). leg_pos = NA legend plotted. leg_pos = 'interactive' click onthe map choose legend position. leg_title legend title leg_title_cex size legend title leg_val_cex size values legend leg_val_rnd number decimal places values legend leg_frame whether add frame legend (TRUE) (FALSE) leg_adj adjust postion legend x y directions leg_size size legend; 2 means two times bigger leg_border symbol border color(s) leg_box_cex width height size expansion boxes leg_fg color legend foreground leg_bg color legend backgournd leg_frame_border border color legend frame add whether add layer existing plot (TRUE) (FALSE)","code":""},{"path":"/reference/mf_grad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot graduated symbols — mf_grad","text":"x (invisibly) returned.","code":""},{"path":"/reference/mf_grad.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot graduated symbols — mf_grad","text":"Breaks defined numeric vector classification method left-closed: breaks defined c(2, 5, 10, 15, 20) mapped [2 - 5[, [5 - 10[, [10 - 15[, [15 - 20]. \"jenks\" method exception right-closed. Jenks breaks computed c(2, 5, 10, 15, 20) mapped [2 - 5], ]5 - 10], ]10 - 15], ]15 - 20].","code":""},{"path":"/reference/mf_grad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot graduated symbols — mf_grad","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_grad(mtq, \"POP\", pch = 22)"},{"path":"/reference/mf_graticule.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot graticules — mf_graticule","title":"Plot graticules — mf_graticule","text":"Display graticules labels map.","code":""},{"path":"/reference/mf_graticule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot graticules — mf_graticule","text":"","code":"mf_graticule(   x,   col = col,   lwd = 1,   lty = 1,   expandBB = rep(0, 4),   label = TRUE,   pos = c(\"top\", \"left\"),   cex = 0.7,   add = TRUE )"},{"path":"/reference/mf_graticule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot graticules — mf_graticule","text":"x object class sf, sfc SpatRaster col graticules label color lwd graticules line width lty graticules line type expandBB fractional values expand bounding box , direction (bottom, left, top, right) label whether add labels (TRUE) (FALSE) pos labels positions (\"bottom\", \"left\", \"top\" / \"right\") cex labels size add whether add layer existing plot (TRUE) (FALSE)","code":""},{"path":"/reference/mf_graticule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot graticules — mf_graticule","text":"(invisible) layer graticules returned (LINESTRING).","code":""},{"path":"/reference/mf_graticule.html","id":"use-of-graticules","dir":"Reference","previous_headings":"","what":"Use of graticules","title":"Plot graticules — mf_graticule","text":"st_graticule: \"cartographic visualization, use graticules advised, unless graphical output used measurement navigation, direction North important interpretation content, content intended display distortions artifacts created projection. Unnecessary use graticules adds visual clutter little relevant information. Use coastlines, administrative boundaries place names permits viewers output orient better graticule.\"","code":""},{"path":"/reference/mf_graticule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot graticules — mf_graticule","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq, expandBB = c(0, .1, .1, 0)) mf_graticule(mtq)   mf_graticule(   x = mtq,   col = \"coral4\",   lwd = 2,   lty = 2,   expandBB = c(.1, 0, 0, .1),   label = TRUE,   pos = c(\"right\", \"bottom\"),   cex = .8,   add = FALSE ) mf_map(mtq, add = TRUE)"},{"path":"/reference/mf_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a map with a specific extent — mf_init","title":"Initialize a map with a specific extent — mf_init","text":"Plot invisible layer extent spatial object. Always use add = TRUE mf_map calls following mf_init call. function similar mf_map(x, col = NA, border = NA).","code":""},{"path":"/reference/mf_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a map with a specific extent — mf_init","text":"","code":"mf_init(x, expandBB = rep(0, 4), theme)"},{"path":"/reference/mf_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a map with a specific extent — mf_init","text":"x object class sf, sfc SpatRaster expandBB fractional values expand bounding box , direction (bottom, left, top, right) theme apply theme (deprecated)","code":""},{"path":"/reference/mf_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a map with a specific extent — mf_init","text":"return value, map initiated.","code":""},{"path":"/reference/mf_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a map with a specific extent — mf_init","text":"","code":"mtq <- mf_get_mtq() target <- mtq[30, ] mf_init(target) mf_map(mtq, add = TRUE)"},{"path":"/reference/mf_inset_on.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an inset — mf_inset_on","title":"Plot an inset — mf_inset_on","text":"function used add inset map current map.","code":""},{"path":"/reference/mf_inset_on.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an inset — mf_inset_on","text":"","code":"mf_inset_on(x, pos = \"topright\", cex = 0.2, fig)  mf_inset_off()"},{"path":"/reference/mf_inset_on.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an inset — mf_inset_on","text":"x sf object, \"worldmap\" use mf_worldmap. pos position, one \"bottomleft\", \"left\", \"topleft\", \"top\", \"bottom\", \"bottomright\", \"right\", \"topright\" cex share map width occupied inset fig coordinates inset region (NDC, see ?par())","code":""},{"path":"/reference/mf_inset_on.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an inset — mf_inset_on","text":"return value, inset initiated closed.","code":""},{"path":"/reference/mf_inset_on.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot an inset — mf_inset_on","text":"x used (pos cex), width/height ratio inset match width/height ratio x bounding box. fig used, coordinates (xmin, xmax, ymin, ymax) expressed fractions mapping space (.e. excluding margins). map layers plotted inset (.e mf_inset_off()), please use add = TRUE. possible plot inset within inset. possible plot anything (base plots) within inset, map layers.","code":""},{"path":"/reference/mf_inset_on.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot an inset — mf_inset_on","text":"function work mfrow used par().","code":""},{"path":"/reference/mf_inset_on.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an inset — mf_inset_on","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_inset_on(x = mtq[1, ], cex = .2) mf_map(mtq[1, ]) mf_inset_off()   mf_map(mtq) mf_inset_on(x = \"worldmap\", pos = \"bottomleft\") mf_worldmap(x = mtq) mf_inset_off()   mf_map(mtq) mf_inset_on(fig = c(0, 0.25, 0, 0.25)) mf_map(x = mtq) mf_inset_off()"},{"path":"/reference/mf_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot labels — mf_label","title":"Plot labels — mf_label","text":"Put labels map.","code":""},{"path":"/reference/mf_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot labels — mf_label","text":"","code":"mf_label(   x,   var,   col,   cex = 0.7,   overlap = TRUE,   lines = TRUE,   halo = FALSE,   bg,   r = 0.1,   q = 1,   ... )"},{"path":"/reference/mf_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot labels — mf_label","text":"x object class sf var name(s) variable(s) plot col labels color, can single color vector colors cex labels cex, can single size vector sizes overlap FALSE, labels moved overlap. lines TRUE, lines plotted x,y word, words covering x,y coordinate halo TRUE, 'halo' displayed around text additional arguments bg r can modified set color width halo. bg halo color, can single color vector colors r width halo, can single value vector values q quality non overlapping labels placement. Possible values 0 (quick results), 1 (reasonable quality speed), 2 (better quality), 3 (insane quality, can take lot time). ... text arguments.","code":""},{"path":"/reference/mf_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot labels — mf_label","text":"return value, labels displayed.","code":""},{"path":"/reference/mf_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot labels — mf_label","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mtq$cex <- c(rep(.8, 8), 2, rep(.8, 25)) mf_label(   x = mtq, var = \"LIBGEO\",   col = \"grey10\", halo = TRUE, cex = mtq$cex,   overlap = FALSE, lines = FALSE )"},{"path":"/reference/mf_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a map layout — mf_layout","title":"Plot a map layout — mf_layout","text":"Plot map layout (title, credits, scalebar, north arrow, frame). function uses mf_title, mf_credits, mf_scale mf_arrow default values.","code":""},{"path":"/reference/mf_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a map layout — mf_layout","text":"","code":"mf_layout(   title = \"Map Title\",   credits = \"Authors & Sources\",   scale = TRUE,   arrow = TRUE,   frame = FALSE )"},{"path":"/reference/mf_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a map layout — mf_layout","text":"title title map credits credits scale display scale bar arrow display arrow frame display frame","code":""},{"path":"/reference/mf_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a map layout — mf_layout","text":"return value, map layout displayed.","code":""},{"path":"/reference/mf_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a map layout — mf_layout","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_layout()"},{"path":"/reference/mf_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a legend — mf_legend","title":"Plot a legend — mf_legend","text":"Plot different types legend. \"type\" argument defines legend type. Please note arguments available types legend others relevant specific legend types (see Details). mf_legend() wrapper maplegend::leg().","code":""},{"path":"/reference/mf_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a legend — mf_legend","text":"","code":"mf_legend(   type,   val,   pos = \"left\",   pal = \"Inferno\",   col = \"tomato4\",   inches = 0.3,   symbol = \"circle\",   self_adjust = FALSE,   lwd = 0.7,   border = \"#333333\",   pch = seq_along(val),   cex = rep(1, length(val)),   title = \"Legend Title\",   title_cex = 0.8 * size,   val_cex = 0.6 * size,   val_rnd = 0,   col_na = \"white\",   cex_na = 1,   pch_na = 4,   no_data = FALSE,   no_data_txt = \"No Data\",   box_border = \"#333333\",   box_cex = c(1, 1),   horiz = FALSE,   frame_border,   frame = FALSE,   bg,   fg,   size = 1,   return_bbox = FALSE,   adj = c(0, 0),   pt_pch,   pt_cex,   pt_cex_na,   pt_pch_na )"},{"path":"/reference/mf_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a legend — mf_legend","text":"type type legend: prop proportional symbols, choro choropleth maps, cont continuous maps (e.g. raster), typo typology maps, symb symbols maps, prop_line proportional lines maps, grad_line graduated lines maps. val vector value(s) (\"prop\" \"prop_line\", least c(min, max) \"cont\"), vector categories (\"symb\" \"typo\"), break labels (\"choro\" \"grad_line\"). pos position legend. can one 'topleft', 'top', 'topright', 'right', 'bottomright', 'bottom','bottomleft', 'left', 'interactive' vector two coordinates map units (c(x, y)). pal color palette name vector colors col color symbols (\"prop\") color lines (\"prop_line\" \"grad_line\") inches size largest symbol (radius circles, half width squares) inches symbol type symbols, 'circle' 'square' self_adjust TRUE values self-adjusted keep min, max intermediate rounded values lwd width(s) symbols borders (\"prop\" \"symb\"), width largest line (\"prop_line\"), vector line width (\"grad_line\") border symbol border color(s) pch type(s) symbols (0:25) cex size(s) symbols title title legend title_cex size legend title val_cex size values legend val_rnd number decimal places values legend col_na color missing values cex_na size symbols missing values pch_na type symbols missing values no_data TRUE \"missing value\" box plotted no_data_txt label missing values box_border border color legend boxes box_cex width height size expansion boxes, (offset circles \"prop\" legends horiz = TRUE) horiz TRUE plot horizontal legend frame_border border color frame frame TRUE legend plotted within frame bg background color legend fg foreground color legend size size legend; 2 means two times bigger return_bbox return bounding box legend. legend plotted. adj adjust postion legend x y directions pt_pch deprecated pt_cex deprecated pt_cex_na deprecated pt_pch_na deprecated","code":""},{"path":"/reference/mf_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a legend — mf_legend","text":"value returned, legend displayed (except return_bbox used).","code":""},{"path":"/reference/mf_legend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a legend — mf_legend","text":"arguments available types legend: val, pos, title, title_cex, val_cex, frame, bg, fg, size, adj, return_bbox). Relevant arguments specific legend types: leg(type = \"prop\", val, inches, symbol, col, lwd, border, val_rnd, self_adjust, horiz) leg(type = \"choro\", val, pal, val_rnd, col_na, no_data, no_data_txt, box_border, horiz) leg(type = \"cont\", val, pal, val_rnd, col_na, no_data, no_data_txt, box_border, horiz) leg(type = \"typo\", val, pal, col_na, no_data, no_data_txt, box_border) leg(type = \"symb\", val, pal, pch, cex, lwd, pch_na, cex_na, col_na, no_data, no_data_txt) leg(type = \"prop_line\", val, col, lwd, val_rnd) leg(type = \"grad_line\", val, col, lwd, val_rnd)","code":""},{"path":"/reference/mf_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a legend — mf_legend","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_legend(type = \"prop\", pos = \"topright\", val = c(1, 5, 10), inches = .3) mf_legend(   type = \"choro\", pos = \"bottomright\", val = c(10, 20, 30, 40, 50),   pal = hcl.colors(4, \"Reds 2\") ) mf_legend(   type = \"typo\", pos = \"topleft\", val = c(\"A\", \"B\", \"C\", \"D\"),   pal = hcl.colors(4, \"Dynamic\") ) mf_legend(   type = \"symb\", pos = \"bottomleft\", val = c(\"A\", \"B\", \"C\"),   pch = 21:23, cex = c(1, 2, 2),   pal = hcl.colors(3, \"Dynamic\") ) mf_legend(   type = \"grad_line\", pos = \"top\", val = c(1, 2, 3, 4, 10, 15),   lwd = c(0.2, 2, 4, 5, 10) ) mf_legend(type = \"prop_line\", pos = \"bottom\", lwd = 20, val = c(5, 50, 100))"},{"path":"/reference/mf_legend_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a legend for a choropleth map — mf_legend_c","title":"Plot a legend for a choropleth map — mf_legend_c","text":"Deprecated. function plots legend choropleth map.","code":""},{"path":"/reference/mf_legend_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a legend for a choropleth map — mf_legend_c","text":"","code":"mf_legend_c(   pos = \"topleft\",   val,   pal,   title = \"Legend Title\",   title_cex = 0.8,   val_cex = 0.6,   val_rnd = 2,   col_na = \"white\",   no_data = FALSE,   no_data_txt = \"No Data\",   frame = FALSE,   border,   bg,   fg,   cex = 1 )"},{"path":"/reference/mf_legend_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a legend for a choropleth map — mf_legend_c","text":"pos position legend, one \"topleft\", \"top\", \"topright\", \"right\", \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"interactive\" vector two coordinates map units (c(x, y)) val break labels pal set colors. title title legend title_cex size legend title val_cex size values legend val_rnd number decimal places values legend. col_na color missing values no_data TRUE \"missing value\" box plotted no_data_txt label missing values frame whether add frame legend (TRUE) (FALSE) border color boxes' borders bg background legend fg foreground legend cex size legend; 2 means two times bigger","code":""},{"path":"/reference/mf_legend_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a legend for a choropleth map — mf_legend_c","text":"return value, legend displayed.","code":""},{"path":"/reference/mf_legend_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a legend for a choropleth map — mf_legend_c","text":"","code":"if (FALSE) { plot.new() plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1) mf_legend_c(val = c(1, 2, 3, 4), pal = c(\"red1\", \"red3\", \"red4\")) }"},{"path":"/reference/mf_legend_gl.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a legend for a graduated lines map — mf_legend_gl","title":"Plot a legend for a graduated lines map — mf_legend_gl","text":"Deprecated. function plots legend graduated lines maps.","code":""},{"path":"/reference/mf_legend_gl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a legend for a graduated lines map — mf_legend_gl","text":"","code":"mf_legend_gl(   pos = \"topleft\",   val,   col = \"tomato4\",   lwd,   title = \"Legend Title\",   title_cex = 0.8,   val_cex = 0.6,   val_rnd = 2,   frame = FALSE,   bg,   fg,   cex = 1 )"},{"path":"/reference/mf_legend_gl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a legend for a graduated lines map — mf_legend_gl","text":"pos position legend, one \"topleft\", \"top\", \"topright\", \"right\", \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"interactive\" vector two coordinates map units (c(x, y)) val break labels col lines color lwd lines widths title title legend title_cex size legend title val_cex size values legend val_rnd number decimal places values legend. frame whether add frame legend (TRUE) (FALSE) bg background legend fg foreground legend cex size legend; 2 means two times bigger","code":""},{"path":"/reference/mf_legend_gl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a legend for a graduated lines map — mf_legend_gl","text":"return value, legend displayed.","code":""},{"path":"/reference/mf_legend_gl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a legend for a graduated lines map — mf_legend_gl","text":"","code":"if (FALSE) { plot.new() plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1) mf_legend_gl(lwd = c(0.2, 2, 4, 5, 10), val = c(1, 2, 3, 4, 10.2, 15.2)) }"},{"path":"/reference/mf_legend_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a legend for a proportional symbols map — mf_legend_p","title":"Plot a legend for a proportional symbols map — mf_legend_p","text":"Deprecated. function plots legend proportional symbols.","code":""},{"path":"/reference/mf_legend_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a legend for a proportional symbols map — mf_legend_p","text":"","code":"mf_legend_p(   pos = \"left\",   val,   col = \"tomato4\",   inches,   symbol = \"circle\",   border,   lwd = 0.7,   title = \"Legend Title\",   title_cex = 0.8,   val_cex = 0.6,   val_rnd = 0,   frame = FALSE,   bg,   fg,   cex = 1,   self_adjust = FALSE )"},{"path":"/reference/mf_legend_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a legend for a proportional symbols map — mf_legend_p","text":"pos position legend, one \"topleft\", \"top\", \"topright\", \"right\", \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"interactive\" vector two coordinates map units (c(x, y)). val vector values (least min max). col color symbols inches size biggest symbol (radius circles, half width squares) inches symbol type symbols, 'circle' 'square' border color symbols borders lwd width symbols borders title title legend title_cex size legend title val_cex size values legend val_rnd number decimal places values legend. frame whether add frame legend (TRUE) (FALSE) bg background legend fg foreground legend cex size legend; 2 means two times bigger self_adjust TRUE values self-adjusted keep min, max intermediate rounded values","code":""},{"path":"/reference/mf_legend_p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a legend for a proportional symbols map — mf_legend_p","text":"return value, legend displayed.","code":""},{"path":"/reference/mf_legend_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a legend for a proportional symbols map — mf_legend_p","text":"","code":"if (FALSE) { plot.new() plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1) mf_legend_p(val = c(1, 20, 100), col = \"red\", inches = .3) }"},{"path":"/reference/mf_legend_pl.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a legend for a proportional lines map — mf_legend_pl","title":"Plot a legend for a proportional lines map — mf_legend_pl","text":"Deprecated. function plots legend proportional lines.","code":""},{"path":"/reference/mf_legend_pl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a legend for a proportional lines map — mf_legend_pl","text":"","code":"mf_legend_pl(   pos = \"left\",   val,   lwd,   col = \"tomato4\",   title = \"Legend Title\",   title_cex = 0.8,   val_cex = 0.6,   val_rnd = 0,   frame = FALSE,   bg,   fg,   cex = 1 )"},{"path":"/reference/mf_legend_pl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a legend for a proportional lines map — mf_legend_pl","text":"pos position legend, one \"topleft\", \"top\", \"topright\", \"right\", \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"interactive\" vector two coordinates map units (c(x, y)). val vector values (least min max). lwd width largest line col color lines title title legend title_cex size legend title val_cex size values legend val_rnd number decimal places values legend. frame whether add frame legend (TRUE) (FALSE) bg background legend fg foreground legend cex size legend; 2 means two times bigger","code":""},{"path":"/reference/mf_legend_pl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a legend for a proportional lines map — mf_legend_pl","text":"return value, legend displayed.","code":""},{"path":"/reference/mf_legend_pl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a legend for a proportional lines map — mf_legend_pl","text":"","code":"if (FALSE) { plot.new() plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1) mf_legend_pl(lwd = 20, val = c(5, 10, 50, 100)) }"},{"path":"/reference/mf_legend_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a legend for a symbols map — mf_legend_s","title":"Plot a legend for a symbols map — mf_legend_s","text":"Deprecated. function can plot legend symbols maps.","code":""},{"path":"/reference/mf_legend_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a legend for a symbols map — mf_legend_s","text":"","code":"mf_legend_s(   pos = \"right\",   val,   pal,   pt_pch,   pt_cex,   border,   lwd = 0.7,   title = \"Legend title\",   title_cex = 0.8,   val_cex = 0.6,   pt_cex_na = 1,   pt_pch_na = 4,   col_na = \"white\",   no_data = FALSE,   no_data_txt = \"No Data\",   frame = FALSE,   bg,   fg,   cex = 1 )"},{"path":"/reference/mf_legend_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a legend for a symbols map — mf_legend_s","text":"pos position legend, one \"topleft\", \"top\", \"topright\", \"right\", \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"interactive\" vector two coordinates map units (c(x, y)). val vector categories. pal set colors pt_pch pch symbols (0:25) pt_cex cex symbols border type = \"prop\": color symbols borders lwd width symbols borders title title legend title_cex size legend title val_cex size values legend pt_cex_na cex symbols missing values pt_pch_na pch symbols missing values col_na color missing values no_data TRUE \"missing value\" box plotted no_data_txt label missing values. frame whether add frame legend (TRUE) (FALSE) bg background legend fg foreground legend cex size legend; 2 means two times bigger","code":""},{"path":"/reference/mf_legend_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a legend for a symbols map — mf_legend_s","text":"return value, legend displayed.","code":""},{"path":"/reference/mf_legend_s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a legend for a symbols map — mf_legend_s","text":"","code":"plot.new() plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1) mf_legend_s(   val = c(\"Type C\", \"Type D\"), pal = c(\"cyan\", \"plum\"),   pt_pch = c(21, 23), pt_cex = c(1, 2) ) #> 'mf_legend_s()' is deprecated. Use 'mf_legend(type = 'symb', ...)' instead. #> pt_pch is deprecated, use pch instead. #> pt_cex is deprecated, use cex instead."},{"path":"/reference/mf_legend_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a legend for a typology map — mf_legend_t","title":"Plot a legend for a typology map — mf_legend_t","text":"Deprecated. function plots legend typology map.","code":""},{"path":"/reference/mf_legend_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a legend for a typology map — mf_legend_t","text":"","code":"mf_legend_t(   pos = \"topright\",   val,   pal,   title = \"Legend Title\",   title_cex = 0.8,   val_cex = 0.6,   col_na = \"white\",   no_data = FALSE,   no_data_txt = \"No Data\",   frame = FALSE,   border,   bg,   fg,   cex = 1 )"},{"path":"/reference/mf_legend_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a legend for a typology map — mf_legend_t","text":"pos position legend, one \"topleft\", \"top\", \"topright\", \"right\", \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"interactive\" vector two coordinates map units (c(x, y)). val vector categories. pal set colors title title legend title_cex size legend title val_cex size values legend col_na color missing values no_data TRUE \"missing value\" box plotted no_data_txt label missing values. frame whether add frame legend (TRUE) (FALSE) border color boxes' borders bg background legend fg foreground legend cex size legend; 2 means two times bigger","code":""},{"path":"/reference/mf_legend_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a legend for a typology map — mf_legend_t","text":"return value, legend displayed.","code":""},{"path":"/reference/mf_legend_t.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a legend for a typology map — mf_legend_t","text":"","code":"if (FALSE) { plot.new() plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1) mf_legend_t(val = c(\"type A\", \"type B\"), pal = c(\"navy\", \"tomato\")) }"},{"path":"/reference/mf_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a map — mf_map","title":"Plot a map — mf_map","text":"main function package. mf_map() can used plot types maps. three main arguments : x (sf object), var (variable map), type (map type). Relevant arguments default values map types detailed specific functions, see Details.","code":""},{"path":"/reference/mf_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a map — mf_map","text":"","code":"mf_map(   x,   var,   type = \"base\",   breaks,   nbreaks,   pal,   alpha,   rev,   inches,   val_max,   symbol,   col,   lwd_max,   val_order,   pch,   cex,   border,   lwd,   col_na,   cex_na,   pch_na,   expandBB,   add,   leg_pos,   leg_title,   leg_title_cex,   leg_val_cex,   leg_val_rnd,   leg_no_data,   leg_frame,   leg_frame_border,   leg_horiz,   leg_adj,   leg_bg,   leg_fg,   leg_size,   leg_border,   leg_box_border,   leg_box_cex,   ... )"},{"path":"/reference/mf_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a map — mf_map","text":"x object class sf sfc var name(s) variable(s) plot type base: base maps prop: proportional symbols maps choro: choropleth maps typo: typology maps symb: symbols maps grad: graduated symbols maps prop_choro: proportional symbols maps symbols colors based quantitative data classification prop_typo: proportional symbols maps symbols colors based qualitative data symb_choro: symbols maps symbols colors based quantitative data classification breaks either numeric vector actual breaks, classification method name (see mf_get_breaks Details) nbreaks number classes pal set colors palette name (hcl.colors) alpha pal hcl.colors palette name, alpha-transparency level range [0,1] rev pal hcl.colors palette name, whether ordering colors reversed (TRUE) (FALSE) inches size biggest symbol (radius circles, half width squares) inches. val_max maximum value used proportional symbols symbol type symbols, 'circle' 'square' col color lwd_max line width largest line val_order values order, character vector matches var modalities pch point type cex point size border border color lwd border width col_na color missing values cex_na cex (point size) NA values pch_na pch (point type) NA values expandBB fractional values expand bounding box , direction (bottom, left, top, right) add whether add layer existing plot (TRUE) (FALSE) leg_pos position legend, one 'topleft', 'top','topright', 'right', 'bottomright', 'bottom', 'bottomleft', 'left' vector two coordinates map units (c(x, y)). leg_pos = NA legend plotted. leg_pos = 'interactive' click onthe map choose legend position. leg_title legend title leg_title_cex size legend title leg_val_cex size values legend leg_val_rnd number decimal places values legend leg_no_data label missing values leg_frame whether add frame legend (TRUE) (FALSE) leg_frame_border border color legend frame leg_horiz display legend horizontally (proportional symbols choropleth types) leg_adj adjust postion legend x y directions leg_bg color legend backgournd leg_fg color legend foreground leg_size size legend; 2 means two times bigger leg_border symbol border color(s) leg_box_border border color legend boxes leg_box_cex width height size expansion boxes ... parameters plot sfc objects","code":""},{"path":"/reference/mf_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a map — mf_map","text":"x (invisibly) returned.","code":""},{"path":"/reference/mf_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a map — mf_map","text":"Relevant arguments, default values examples map types detailed specific functions: base: base maps - mf_base prop: proportional symbols maps - mf_prop choro: choropleth maps - mf_choro typo: typology maps - mf_typo symb: symbols maps - mf_symb grad: graduated symbols maps - mf_grad prop_choro: proportional symbols maps symbols colors based quantitative data classification - mf_prop_choro prop_typo: proportional symbols maps symbols colors based qualitative data - mf_prop_typo symb_choro: symbols maps symbols colors based quantitative data classification - mf_symb_choro Breaks defined numeric vector classification method left-closed: breaks defined c(2, 5, 10, 15, 20) mapped [2 - 5[, [5 - 10[, [10 - 15[, [15 - 20]. \"jenks\" method exception right-closed. Jenks breaks computed c(2, 5, 10, 15, 20) mapped [2 - 5], ]5 - 10], ]10 - 15], ]15 - 20].","code":""},{"path":"/reference/mf_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a map — mf_map","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_map(mtq, var = \"POP\", type = \"prop\")  mf_map(mtq, var = \"MED\", type = \"choro\")  mf_map(mtq, var = \"STATUS\", type = \"typo\")  mf_map(mtq) mf_map(mtq, var = \"STATUS\", type = \"symb\")  mf_map(mtq) mf_map(mtq, var = \"POP\", type = \"grad\")  mf_map(mtq) mf_map(mtq, var = c(\"POP\", \"MED\"), type = \"prop_choro\")  mf_map(mtq) mf_map(mtq, var = c(\"POP\", \"STATUS\"), type = \"prop_typo\")  mf_map(mtq) mf_map(mtq, var = c(\"STATUS\", \"MED\"), type = \"symb_choro\")"},{"path":"/reference/mf_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot proportional symbols — mf_prop","title":"Plot proportional symbols — mf_prop","text":"Plot proportional symbols.","code":""},{"path":"/reference/mf_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot proportional symbols — mf_prop","text":"","code":"mf_prop(   x,   var,   inches = 0.3,   val_max,   lwd_max = 20,   symbol = \"circle\",   col = \"tomato4\",   border = getOption(\"mapsf.fg\"),   lwd = 0.7,   leg_pos = mf_get_leg_pos(x),   leg_title = var,   leg_title_cex = 0.8,   leg_val_cex = 0.6,   leg_val_rnd = 0,   leg_frame = FALSE,   leg_frame_border = getOption(\"mapsf.fg\"),   leg_horiz = FALSE,   leg_adj = c(0, 0),   leg_fg = getOption(\"mapsf.fg\"),   leg_bg = getOption(\"mapsf.bg\"),   leg_size = 1,   add = TRUE )"},{"path":"/reference/mf_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot proportional symbols — mf_prop","text":"x object class sf var name(s) variable(s) plot inches size biggest symbol (radius circles, half width squares) inches. val_max maximum value used proportional symbols lwd_max line width largest line symbol type symbols, 'circle' 'square' col color border border color lwd border width leg_pos position legend, one 'topleft', 'top','topright', 'right', 'bottomright', 'bottom', 'bottomleft', 'left' vector two coordinates map units (c(x, y)). leg_pos = NA legend plotted. leg_pos = 'interactive' click onthe map choose legend position. leg_title legend title leg_title_cex size legend title leg_val_cex size values legend leg_val_rnd number decimal places values legend leg_frame whether add frame legend (TRUE) (FALSE) leg_frame_border border color legend frame leg_horiz display legend horizontally (proportional symbols choropleth types) leg_adj adjust postion legend x y directions leg_fg color legend foreground leg_bg color legend backgournd leg_size size legend; 2 means two times bigger add whether add layer existing plot (TRUE) (FALSE)","code":""},{"path":"/reference/mf_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot proportional symbols — mf_prop","text":"x (invisibly) returned.","code":""},{"path":"/reference/mf_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot proportional symbols — mf_prop","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_prop(mtq, \"POP\")   mf_map(mtq) mf_prop(   x = mtq, var = \"POP\", inches = .4, symbol = \"circle\", val_max = 90000,   col = \"tomato1\", border = \"blue\", lwd = 1,   leg_pos = \"right\", leg_title = \"Population\",   leg_title_cex = 1, leg_val_cex = .8, leg_val_rnd = 0,   leg_frame = TRUE, add = TRUE )"},{"path":"/reference/mf_prop_choro.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot proportional symbols using choropleth coloration — mf_prop_choro","title":"Plot proportional symbols using choropleth coloration — mf_prop_choro","text":"Plot proportional symbols colors based quantitative data classification.","code":""},{"path":"/reference/mf_prop_choro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot proportional symbols using choropleth coloration — mf_prop_choro","text":"","code":"mf_prop_choro(   x,   var,   inches = 0.3,   val_max,   symbol = \"circle\",   pal = \"Mint\",   alpha = 1,   rev = FALSE,   breaks = \"quantile\",   nbreaks,   border = getOption(\"mapsf.fg\"),   lwd = 0.7,   col_na = \"white\",   leg_pos = mf_get_leg_pos(x, 1),   leg_title = var,   leg_title_cex = c(0.8, 0.8),   leg_val_cex = c(0.6, 0.6),   leg_val_rnd = c(0, 2),   leg_no_data = \"No data\",   leg_frame = c(FALSE, FALSE),   leg_frame_border = getOption(\"mapsf.fg\"),   leg_horiz = c(FALSE, FALSE),   leg_adj = c(0, 0),   leg_fg = getOption(\"mapsf.fg\"),   leg_bg = getOption(\"mapsf.bg\"),   leg_size = 1,   leg_box_border = getOption(\"mapsf.fg\"),   leg_box_cex = c(1, 1),   add = TRUE )"},{"path":"/reference/mf_prop_choro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot proportional symbols using choropleth coloration — mf_prop_choro","text":"x object class sf var name(s) variable(s) plot inches size biggest symbol (radius circles, half width squares) inches. val_max maximum value used proportional symbols symbol type symbols, 'circle' 'square' pal set colors palette name (hcl.colors) alpha pal hcl.colors palette name, alpha-transparency level range [0,1] rev pal hcl.colors palette name, whether ordering colors reversed (TRUE) (FALSE) breaks either numeric vector actual breaks, classification method name (see mf_get_breaks Details) nbreaks number classes border border color lwd border width col_na color missing values leg_pos position legend, two 'topleft', 'top','topright', 'right','bottomright', 'bottom', 'bottomleft', 'left' vector two coordinates map units (c(x, y)). leg_pos argument can c('position', 'position'), c('position', x2, y2), c(x1,y1, 'position') c(x1, y1, x2, y2). Use NA avoid plotting legend, use 'interactive' choose thelegend position interactively. leg_title legend title leg_title_cex size legend title leg_val_cex size values legend leg_val_rnd number decimal places values legend leg_no_data label missing values leg_frame whether add frame legend (TRUE) (FALSE) leg_frame_border border color legend frame leg_horiz display legend horizontally (proportional symbols choropleth types) leg_adj adjust postion legend x y directions leg_fg color legend foreground leg_bg color legend backgournd leg_size size legend; 2 means two times bigger leg_box_border border color legend boxes leg_box_cex width height size expansion boxes add whether add layer existing plot (TRUE) (FALSE)","code":""},{"path":"/reference/mf_prop_choro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot proportional symbols using choropleth coloration — mf_prop_choro","text":"x (invisibly) returned.","code":""},{"path":"/reference/mf_prop_choro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot proportional symbols using choropleth coloration — mf_prop_choro","text":"Breaks defined numeric vector classification method left-closed: breaks defined c(2, 5, 10, 15, 20) mapped [2 - 5[, [5 - 10[, [10 - 15[, [15 - 20]. \"jenks\" method exception right-closed. Jenks breaks computed c(2, 5, 10, 15, 20) mapped [2 - 5], ]5 - 10], ]10 - 15], ]15 - 20].","code":""},{"path":"/reference/mf_prop_choro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot proportional symbols using choropleth coloration — mf_prop_choro","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_prop_choro(mtq, c(\"POP\", \"MED\"))   mf_map(mtq) mtq[6, \"MED\"] <- NA mf_prop_choro(   x = mtq, var = c(\"POP\", \"MED\"), inches = .35, border = \"tomato4\",   val_max = 90000, symbol = \"circle\", col_na = \"grey\", pal = \"Cividis\",   breaks = \"equal\", nbreaks = 4, lwd = 4,   leg_pos = c(\"bottomright\", \"bottomleft\"),   leg_title = c(\"Population\", \"Median Income\"),   leg_title_cex = c(0.8, 1),   leg_val_cex = c(.7, .9),   leg_val_rnd = c(0, 0),   leg_no_data = \"No data\",   leg_frame = c(TRUE, TRUE),   add = TRUE )"},{"path":"/reference/mf_prop_typo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot proportional symbols using typology coloration — mf_prop_typo","title":"Plot proportional symbols using typology coloration — mf_prop_typo","text":"Plot proportional symbols colors based qualitative data.","code":""},{"path":"/reference/mf_prop_typo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot proportional symbols using typology coloration — mf_prop_typo","text":"","code":"mf_prop_typo(   x,   var,   inches = 0.3,   val_max,   symbol = \"circle\",   pal = \"Dynamic\",   alpha = 1,   rev = FALSE,   val_order,   border = getOption(\"mapsf.fg\"),   lwd = 0.7,   lwd_max = 15,   col_na = \"white\",   leg_pos = mf_get_leg_pos(x, 1),   leg_title = var,   leg_title_cex = c(0.8, 0.8),   leg_val_cex = c(0.6, 0.6),   leg_val_rnd = c(0),   leg_no_data = \"No data\",   leg_frame = c(FALSE, FALSE),   leg_frame_border = getOption(\"mapsf.fg\"),   leg_horiz = FALSE,   leg_adj = c(0, 0),   leg_fg = getOption(\"mapsf.fg\"),   leg_bg = getOption(\"mapsf.bg\"),   leg_size = 1,   leg_box_border = getOption(\"mapsf.fg\"),   leg_box_cex = c(1, 1),   add = TRUE )"},{"path":"/reference/mf_prop_typo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot proportional symbols using typology coloration — mf_prop_typo","text":"x object class sf var name(s) variable(s) plot inches size biggest symbol (radius circles, half width squares) inches. val_max maximum value used proportional symbols symbol type symbols, 'circle' 'square' pal set colors palette name (hcl.colors) alpha pal hcl.colors palette name, alpha-transparency level range [0,1] rev pal hcl.colors palette name, whether ordering colors reversed (TRUE) (FALSE) val_order values order, character vector matches var modalities border border color lwd border width lwd_max line width largest line col_na color missing values leg_pos position legend, two 'topleft', 'top','topright', 'right','bottomright', 'bottom', 'bottomleft', 'left' vector two coordinates map units (c(x, y)). leg_pos argument can c('position', 'position'), c('position', x2, y2), c(x1,y1, 'position') c(x1, y1, x2, y2). Use NA avoid plotting legend, use 'interactive' choose thelegend position interactively. leg_title legend title leg_title_cex size legend title leg_val_cex size values legend leg_val_rnd number decimal places values legend leg_no_data label missing values leg_frame whether add frame legend (TRUE) (FALSE) leg_horiz display legend horizontally (proportional symbols choropleth types) leg_adj adjust postion legend x y directions add whether add layer existing plot (TRUE) (FALSE)","code":""},{"path":"/reference/mf_prop_typo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot proportional symbols using typology coloration — mf_prop_typo","text":"x (invisibly) returned.","code":""},{"path":"/reference/mf_prop_typo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot proportional symbols using typology coloration — mf_prop_typo","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_prop_typo(mtq, c(\"POP\", \"STATUS\"))   mtq[6, \"STATUS\"] <- NA mf_map(mtq) mf_prop_typo(   x = mtq, var = c(\"POP\", \"STATUS\"), inches = .35, border = \"tomato4\",   val_max = 90000, symbol = \"circle\", col_na = \"grey\", pal = \"Dynamic\",   lwd = 2,   leg_pos = c(\"bottomright\", \"bottomleft\"),   leg_title = c(\"Population\", \"Municipality\\nstatus\"),   leg_title_cex = c(0.9, 0.9),   leg_val_cex = c(.7, .7),   val_order = c(\"Prefecture\", \"Sub-prefecture\", \"Simple municipality\"),   leg_no_data = \"No dada\",   leg_frame = c(TRUE, TRUE),   add = TRUE )"},{"path":"/reference/mf_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a raster — mf_raster","title":"Plot a raster — mf_raster","text":"Plot raster object (SpatRaster terra).","code":""},{"path":"/reference/mf_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a raster — mf_raster","text":"","code":"mf_raster(   x,   pal,   expandBB = rep(0, 4),   alpha = 1,   rev = FALSE,   leg_pos = \"right\",   leg_title = names(x),   leg_title_cex = 0.8,   leg_val_cex = 0.6,   leg_val_rnd = 2,   leg_no_data = \"No data\",   leg_frame = FALSE,   leg_frame_border = getOption(\"mapsf.fg\"),   leg_horiz = FALSE,   leg_adj = c(0, 0),   leg_fg = getOption(\"mapsf.fg\"),   leg_bg = getOption(\"mapsf.bg\"),   leg_size = 1,   add = FALSE,   ... )"},{"path":"/reference/mf_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a raster — mf_raster","text":"x SpatRaster pal set colors palette name (hcl.colors) expandBB fractional values expand bounding box , direction (bottom, left, top, right) alpha pal hcl.colors palette name, alpha-transparency level range [0,1] rev pal hcl.colors palette name, whether ordering colors reversed (TRUE) (FALSE) leg_pos position legend, one 'topleft', 'top','topright', 'right', 'bottomright', 'bottom', 'bottomleft', 'left' vector two coordinates map units (c(x, y)). leg_pos = NA legend plotted. leg_pos = 'interactive' click onthe map choose legend position. leg_title legend title leg_title_cex size legend title leg_val_cex size values legend leg_val_rnd number decimal places values legend leg_no_data label missing values leg_frame whether add frame legend (TRUE) (FALSE) leg_frame_border border color legend frame leg_horiz display legend horizontally leg_adj adjust postion legend x y directions leg_fg color legend foreground leg_bg color legend backgournd leg_size size legend; 2 means two times bigger add whether add layer existing plot (TRUE) (FALSE) ... bgalpha, smooth, maxcell arguments passed passed plotRGB  plot","code":""},{"path":"/reference/mf_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a raster — mf_raster","text":"return value, map displayed.","code":""},{"path":"/reference/mf_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a raster — mf_raster","text":"","code":"if (require(\"terra\")) {   r <- rast(system.file(\"ex/elev.tif\", package = \"terra\"))   mf_raster(r) } #> Loading required package: terra #> terra 1.7.55"},{"path":"/reference/mf_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a scale bar — mf_scale","title":"Plot a scale bar — mf_scale","text":"Plot scale bar.","code":""},{"path":"/reference/mf_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a scale bar — mf_scale","text":"","code":"mf_scale(size, pos = \"bottomright\", lwd = 1.5, cex = 0.6, col, unit = \"km\")"},{"path":"/reference/mf_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a scale bar — mf_scale","text":"size size scale bar units (default km). size set, automatic size used (1/10 map width) pos position. can one 'bottomright', 'bottomleft', 'interactive' vector two coordinates map units (c(x, y)). lwd width scale bar cex cex text col color unit units used scale bar. Can \"mi\" miles, \"m\" meters, \"km\" kilometers (default)","code":""},{"path":"/reference/mf_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a scale bar — mf_scale","text":"return value, scale bar displayed.","code":""},{"path":"/reference/mf_scale.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot a scale bar — mf_scale","text":"scale bar work unprojected (long/lat) maps.","code":""},{"path":"/reference/mf_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a scale bar — mf_scale","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_scale()"},{"path":"/reference/mf_shadow.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a shadow — mf_shadow","title":"Plot a shadow — mf_shadow","text":"Plot shadow polygon layer.","code":""},{"path":"/reference/mf_shadow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a shadow — mf_shadow","text":"","code":"mf_shadow(x, col = \"grey50\", cex = 1, add = FALSE)"},{"path":"/reference/mf_shadow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a shadow — mf_shadow","text":"x sf sfc polygon object col shadow color cex shadow extent add whether add layer existing plot (TRUE) (FALSE)","code":""},{"path":"/reference/mf_shadow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a shadow — mf_shadow","text":"x (invisibly) returned.","code":""},{"path":"/reference/mf_shadow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a shadow — mf_shadow","text":"","code":"mtq <- mf_get_mtq() mf_shadow(mtq) mf_map(mtq, add = TRUE)"},{"path":"/reference/mf_symb.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot symbols — mf_symb","title":"Plot symbols — mf_symb","text":"Plot symbols based qualitative data.","code":""},{"path":"/reference/mf_symb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot symbols — mf_symb","text":"","code":"mf_symb(   x,   var,   pal = \"Dynamic\",   alpha = 1,   rev = FALSE,   border = getOption(\"mapsf.fg\"),   pch,   cex = 1,   lwd = 0.7,   col_na = \"grey\",   pch_na = 4,   cex_na = 1,   val_order,   leg_pos = mf_get_leg_pos(x),   leg_title = var,   leg_title_cex = 0.8,   leg_val_cex = 0.6,   leg_val_rnd = 2,   leg_no_data = \"No data\",   leg_frame = FALSE,   leg_frame_border = getOption(\"mapsf.fg\"),   leg_adj = c(0, 0),   leg_fg = getOption(\"mapsf.fg\"),   leg_bg = getOption(\"mapsf.bg\"),   leg_size = 1,   add = TRUE )"},{"path":"/reference/mf_symb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot symbols — mf_symb","text":"x object class sf var name(s) variable(s) plot pal set colors palette name (hcl.colors) alpha pal hcl.colors palette name, alpha-transparency level range [0,1] rev pal hcl.colors palette name, whether ordering colors reversed (TRUE) (FALSE) border border color pch pch (point type) symbols cex cex (point size) symbols lwd border width col_na color missing values pch_na pch (point type) NA values cex_na cex (point size) NA values val_order values order, character vector matches var modalities leg_pos position legend, one 'topleft', 'top','topright', 'right', 'bottomright', 'bottom', 'bottomleft', 'left' vector two coordinates map units (c(x, y)). leg_pos = NA legend plotted. leg_pos = 'interactive' click onthe map choose legend position. leg_title legend title leg_title_cex size legend title leg_val_cex size values legend leg_val_rnd number decimal places values legend leg_no_data label missing values leg_frame whether add frame legend (TRUE) (FALSE) leg_frame_border border color legend frame leg_adj adjust postion legend x y directions leg_fg color legend foreground leg_bg color legend backgournd leg_size size legend; 2 means two times bigger add whether add layer existing plot (TRUE) (FALSE)","code":""},{"path":"/reference/mf_symb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot symbols — mf_symb","text":"x (invisibly) returned.","code":""},{"path":"/reference/mf_symb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot symbols — mf_symb","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_symb(mtq, \"STATUS\")   mtq[6, \"STATUS\"] <- NA mf_map(mtq) mf_symb(   x = mtq, var = \"STATUS\", pch = c(21:23), pal = c(\"red1\", \"tan1\", \"khaki1\"),   border = \"grey20\", cex = c(1.5, 1, .9), lwd = .5,   val_order = c(\"Prefecture\", \"Sub-prefecture\", \"Simple municipality\"),   pch_na = 24, leg_frame = TRUE )"},{"path":"/reference/mf_symb_choro.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot symbols using choropleth coloration — mf_symb_choro","title":"Plot symbols using choropleth coloration — mf_symb_choro","text":"Plot symbols colors based quantitative data classification.","code":""},{"path":"/reference/mf_symb_choro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot symbols using choropleth coloration — mf_symb_choro","text":"","code":"mf_symb_choro(   x,   var,   pal = \"Mint\",   alpha = 1,   rev = FALSE,   breaks = \"quantile\",   nbreaks,   border = getOption(\"mapsf.fg\"),   pch,   cex = 1,   lwd = 0.7,   pch_na = 4,   cex_na = 1,   col_na = \"white\",   val_order,   leg_pos = mf_get_leg_pos(x, 1),   leg_title = var,   leg_title_cex = c(0.8, 0.8),   leg_val_cex = c(0.6, 0.6),   leg_val_rnd = 2,   leg_no_data = c(\"No data\", \"No data\"),   leg_frame = c(FALSE, FALSE),   leg_frame_border = getOption(\"mapsf.fg\"),   leg_horiz = FALSE,   leg_adj = c(0, 0),   leg_fg = getOption(\"mapsf.fg\"),   leg_bg = getOption(\"mapsf.bg\"),   leg_size = 1,   leg_box_border = getOption(\"mapsf.fg\"),   leg_box_cex = c(1, 1),   add = TRUE )"},{"path":"/reference/mf_symb_choro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot symbols using choropleth coloration — mf_symb_choro","text":"x object class sf var name(s) variable(s) plot pal set colors palette name (hcl.colors) alpha pal hcl.colors palette name, alpha-transparency level range [0,1] rev pal hcl.colors palette name, whether ordering colors reversed (TRUE) (FALSE) breaks either numeric vector actual breaks, classification method name (see mf_get_breaks Details) nbreaks number classes border border color pch pch (point type) symbols cex cex (point size) symbols lwd border width pch_na pch (point type) NA values cex_na cex (point size) NA values col_na color missing values val_order values order, character vector matches var modalities leg_pos position legend, two 'topleft', 'top','topright', 'right','bottomright', 'bottom', 'bottomleft', 'left' vector two coordinates map units (c(x, y)). leg_pos argument can c('position', 'position'), c('position', x2, y2), c(x1,y1, 'position') c(x1, y1, x2, y2). Use NA avoid plotting legend, use 'interactive' choose thelegend position interactively. leg_title legend title leg_title_cex size legend title leg_val_cex size values legend leg_val_rnd number decimal places values legend leg_no_data label missing values leg_frame whether add frame legend (TRUE) (FALSE) leg_frame_border border color legend frame leg_horiz display legend horizontally (proportional symbols choropleth types) leg_adj adjust postion legend x y directions leg_fg color legend foreground leg_bg color legend backgournd leg_size size legend; 2 means two times bigger leg_box_border border color legend boxes leg_box_cex width height size expansion boxes add whether add layer existing plot (TRUE) (FALSE)","code":""},{"path":"/reference/mf_symb_choro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot symbols using choropleth coloration — mf_symb_choro","text":"x (invisibly) returned.","code":""},{"path":"/reference/mf_symb_choro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot symbols using choropleth coloration — mf_symb_choro","text":"Breaks defined numeric vector classification method left-closed: breaks defined c(2, 5, 10, 15, 20) mapped [2 - 5[, [5 - 10[, [10 - 15[, [15 - 20]. \"jenks\" method exception right-closed. Jenks breaks computed c(2, 5, 10, 15, 20) mapped [2 - 5], ]5 - 10], ]10 - 15], ]15 - 20].","code":""},{"path":"/reference/mf_symb_choro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot symbols using choropleth coloration — mf_symb_choro","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_symb_choro(mtq, c(\"STATUS\", \"MED\"))   mf_map(mtq) mtq$STATUS[30] <- NA mtq$MED[5] <- NA mf_symb_choro(mtq, c(\"STATUS\", \"MED\"),   pal = \"Reds 3\", breaks = \"quantile\", nbreaks = 4,   pch = 21:23, cex = c(3, 2, 1),   pch_na = 25, cex_na = 1.5, col_na = \"blue\",   val_order = c(     \"Prefecture\",     \"Sub-prefecture\",     \"Simple municipality\"   ) )"},{"path":"/reference/mf_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a theme — mf_theme","title":"Set a theme — mf_theme","text":"function set map theme. parameters set function figure margins, background foreground colors mf_title options. Use mf_theme(NULL) mf_theme('default') reset default theme settings.","code":""},{"path":"/reference/mf_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a theme — mf_theme","text":"","code":"mf_theme(x, bg, fg, mar, tab, pos, inner, line, cex, font)"},{"path":"/reference/mf_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a theme — mf_theme","text":"x name map theme. One \"default\", \"brutal\", \"ink\", \"dark\", \"agolalight\", \"candy\", \"darkula\", \"iceberg\", \"green\", \"nevermind\", \"jsk\", \"barcelona\". bg background color fg foreground color mar margins tab TRUE title displayed 'tab' pos title position, one 'left', 'center', 'right' inner TRUE title displayed inside plot area. line number lines used title cex cex title font font title","code":""},{"path":"/reference/mf_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a theme — mf_theme","text":"(invisible) list theme parameters returned.","code":""},{"path":"/reference/mf_theme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set a theme — mf_theme","text":"also possible set custom theme using list arguments (see Examples). mf_theme() returns current theme settings.","code":""},{"path":"/reference/mf_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a theme — mf_theme","text":"","code":"mtq <- mf_get_mtq()  # Choosing a theme by name: mf_theme(\"default\") mf_map(mtq) mf_title()   # Specifying some values directly: mf_theme(bg = \"darkslategrey\", fg = \"lightgrey\") mf_map(mtq) mf_title()   # Using a mix of the above: mf_theme(\"brutal\", fg = \"lightgreen\", pos = \"center\", font = 2, tab = FALSE) mf_map(mtq) mf_title()   # Specifying a list with theme values: theme <- mf_theme(\"default\") theme$mar <- c(1, 1, 3, 1) theme$line <- 2 theme$cex <- 1.5 mf_theme(theme) mf_map(mtq) mf_title()   # or theme <- list(   bg = \"green\",   fg = \"red\",   mar = c(2, 2, 2, 2),   tab = TRUE,   pos = \"center\",   inner = TRUE,   line = 2,   cex = 1.5,   font = 3 ) mf_theme(theme) mf_map(mtq) mf_title()   # Obtaining a list of parameters for the current theme: mf_theme() #> $bg #> [1] \"green\" #>  #> $fg #> [1] \"red\" #>  #> $mar #> [1] 2 2 2 2 #>  #> $tab #> [1] TRUE #>  #> $pos #> [1] \"center\" #>  #> $inner #> [1] TRUE #>  #> $line #> [1] 2 #>  #> $cex #> [1] 1.5 #>  #> $font #> [1] 3 #>   # Removing the current theme: mf_theme(NULL) # or mf_theme(\"default\")"},{"path":"/reference/mf_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a title — mf_title","title":"Plot a title — mf_title","text":"Plot title","code":""},{"path":"/reference/mf_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a title — mf_title","text":"","code":"mf_title(txt = \"Map Title\", pos, tab, bg, fg, cex, line, font, inner)"},{"path":"/reference/mf_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a title — mf_title","text":"txt title text pos position, one 'left', 'center', 'right' tab TRUE title displayed 'tab' bg background title fg foreground title cex cex title line number lines used title font font title inner TRUE title displayed inside plot area.","code":""},{"path":"/reference/mf_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a title — mf_title","text":"return value, title displayed.","code":""},{"path":"/reference/mf_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a title — mf_title","text":"","code":"mtq <- mf_get_mtq() mf_map(mtq) mf_title()"},{"path":"/reference/mf_typo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a typology map — mf_typo","title":"Plot a typology map — mf_typo","text":"Plot typology map.","code":""},{"path":"/reference/mf_typo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a typology map — mf_typo","text":"","code":"mf_typo(   x,   var,   pal = \"Dynamic\",   alpha = 1,   rev = FALSE,   val_order,   border = getOption(\"mapsf.fg\"),   pch = 21,   cex = 1,   lwd = 0.7,   cex_na = 1,   pch_na = 4,   col_na = \"white\",   leg_pos = mf_get_leg_pos(x),   leg_title = var,   leg_title_cex = 0.8,   leg_val_cex = 0.6,   leg_no_data = \"No data\",   leg_frame = FALSE,   leg_frame_border = getOption(\"mapsf.fg\"),   leg_adj = c(0, 0),   leg_size = 1,   leg_box_border = getOption(\"mapsf.fg\"),   leg_box_cex = c(1, 1),   leg_fg = getOption(\"mapsf.fg\"),   leg_bg = getOption(\"mapsf.bg\"),   add = FALSE )"},{"path":"/reference/mf_typo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a typology map — mf_typo","text":"x object class sf var name(s) variable(s) plot pal set colors palette name (hcl.colors) alpha pal hcl.colors palette name, alpha-transparency level range [0,1] rev pal hcl.colors palette name, whether ordering colors reversed (TRUE) (FALSE) val_order values order, character vector matches var modalities border border color pch pch type pch x POINT layer cex cex cex symbols x POINT layer lwd border width cex_na cex NA values x POINT layer pch_na pch NA values x POINT layer col_na color missing values leg_pos position legend, one 'topleft', 'top','topright', 'right', 'bottomright', 'bottom', 'bottomleft', 'left' vector two coordinates map units (c(x, y)). leg_pos = NA legend plotted. leg_pos = 'interactive' click onthe map choose legend position. leg_title legend title leg_title_cex size legend title leg_val_cex size values legend leg_no_data label missing values leg_frame whether add frame legend (TRUE) (FALSE) leg_frame_border border color legend frame leg_adj adjust postion legend x y directions leg_size size legend; 2 means two times bigger leg_box_border border color legend boxes leg_box_cex width height size expansion boxes leg_fg color legend foreground leg_bg color legend backgournd add whether add layer existing plot (TRUE) (FALSE)","code":""},{"path":"/reference/mf_typo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a typology map — mf_typo","text":"return value, map displayed.","code":""},{"path":"/reference/mf_typo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a typology map — mf_typo","text":"","code":"mtq <- mf_get_mtq() mf_typo(mtq, \"STATUS\")  mtq[6, \"STATUS\"] <- NA mf_typo(   x = mtq, var = \"STATUS\", pal = c(\"red\", \"blue\", \"yellow\"), lwd = 1.1,   val_order = c(\"Prefecture\", \"Sub-prefecture\", \"Simple municipality\"),   col_na = \"green\", border = \"brown\",   leg_pos = \"bottomleft\",   leg_title = \"Status\", leg_title_cex = 1.1,   leg_val_cex = 1, leg_no_data = \"No data\",   leg_frame = TRUE, add = FALSE )"},{"path":"/reference/mf_worldmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a point on a world map — mf_worldmap","title":"Plot a point on a world map — mf_worldmap","text":"Plot point world map.","code":""},{"path":"/reference/mf_worldmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a point on a world map — mf_worldmap","text":"","code":"mf_worldmap(   x,   lon,   lat,   water_col = \"lightblue\",   land_col = \"grey60\",   border_col = \"grey40\",   border_lwd = 0.8,   ... )"},{"path":"/reference/mf_worldmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a point on a world map — mf_worldmap","text":"x object class sf sfc lon longitude lat latitude water_col color water land_col color land border_col color borders border_lwd width borders ... parameters related plotted point aspect (cex, pch, col...)","code":""},{"path":"/reference/mf_worldmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a point on a world map — mf_worldmap","text":"return value, world map displayed.","code":""},{"path":"/reference/mf_worldmap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot a point on a world map — mf_worldmap","text":"main part code stolen @fzenoni (https://gist.github.com/fzenoni/ef23faf6d1ada5e4a91c9ef23b0ba2c1).","code":""},{"path":"/reference/mf_worldmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a point on a world map — mf_worldmap","text":"","code":"mtq <- mf_get_mtq() mf_worldmap(mtq)  mf_worldmap(lon = 24, lat = 39)  mf_worldmap(   lon = 106, lat = 26,   pch = 4, lwd = 3, cex = 2, col = \"tomato4\",   water_col = \"#232525\", land_col = \"#A9B7C6\",   border_col = \"white\", border_lwd = 1 )"},{"path":[]},{"path":"/news/index.html","id":"fix-0-8-0","dir":"Changelog","previous_headings":"","what":"Fix","title":"mapsf 0.8.0","text":"raise error display informative message points plotted type = “prop*”","code":""},{"path":"/news/index.html","id":"feat-0-8-0","dir":"Changelog","previous_headings":"","what":"Feat","title":"mapsf 0.8.0","text":"add mf_distr(), function display statistical distribution histogram, boxplot, stripchart density curve add lot legend related args (leg_frame_border, leg_horiz, leg_adj, leg_bg, leg_fg, leg_size, leg_border, leg_box_border, leg_box_cex) double legends (prop_choro, prop_typo, etc.) stacked default add legends raster deprecate mf_legend_*() functions add rev arg function using pal reverse named palettes add q arg mf_label() select quality non overlapping placement","code":""},{"path":"/news/index.html","id":"refactor-0-8-0","dir":"Changelog","previous_headings":"","what":"Refactor","title":"mapsf 0.8.0","text":"use maplegend pkg legends (change may introduce minor breaking changes) use s2 instead overcomplicated sf code othographic proj mf_worldmap() use R base instead C++ mf_label() non overalapping placement","code":""},{"path":"/news/index.html","id":"mapsf-071","dir":"Changelog","previous_headings":"","what":"mapsf 0.7.1","title":"mapsf 0.7.1","text":"CRAN release: 2023-09-05","code":""},{"path":"/news/index.html","id":"fix-0-7-1","dir":"Changelog","previous_headings":"","what":"Fix","title":"mapsf 0.7.1","text":"fix bug color assignment ‘choro’, ‘prop_choro’ ‘symb_choro’ maps supplying “incomplete” breaks (#56)","code":""},{"path":"/news/index.html","id":"mapsf-070","dir":"Changelog","previous_headings":"","what":"mapsf 0.7.0","title":"mapsf 0.7.0","text":"CRAN release: 2023-07-06","code":""},{"path":"/news/index.html","id":"fix-0-7-0","dir":"Changelog","previous_headings":"","what":"Fix","title":"mapsf 0.7.0","text":"use vector colors lines necessary mf_label() (#50) enable pipe without side effects (extra plot) use default transparent background insets deprecate “theme” arg relevant function, adapt docs vignettes, use options() themes instead global variable & mimic behaviour basetheme package force use cairo device, available, mf_export() png fix wrong class allocation using breaks = “jenks” (#53) exports using unprojected objects produce figures inaccurate height/width ratio anymore.","code":""},{"path":"/news/index.html","id":"feat-0-7-0","dir":"Changelog","previous_headings":"","what":"Feat","title":"mapsf 0.7.0","text":"add expandBB arg mf_map() add expandBB arg mf_raster() add arg checking depending type mf_map() add error message functions need pre-existing plot add mf_graticule() add graticule lines labels set internally ‘add’ arg map types mf_map()","code":""},{"path":"/news/index.html","id":"mapsf-061","dir":"Changelog","previous_headings":"","what":"mapsf 0.6.1","title":"mapsf 0.6.1","text":"CRAN release: 2022-12-12","code":""},{"path":"/news/index.html","id":"fix-0-6-1","dir":"Changelog","previous_headings":"","what":"Fix","title":"mapsf 0.6.1","text":"add explicit support sfg objects mf_base(), mf_map(…, type = “base”)","code":""},{"path":[]},{"path":"/news/index.html","id":"fix-0-6-0","dir":"Changelog","previous_headings":"","what":"Fix","title":"mapsf 0.6.0","text":"use val_max mf_prop() LINES add message mf_export() based longlat obj add test “x” class mf_map() enable proportional symbol plots single points using “prop”, “prop_typo” & “prop_choro” maps; see #45 fix bug color assignment mismatch number classes size color palette add error method “geom” mf_get_breaks() min(x) <= 0 remove Inf values x using mf_get_breaks() remove Inf values x using “prop”, “prop_typo” & “prop_choro” maps add informative message NA, 0 & Inf values removed using “prop”, “prop_typo” & “prop_choro” maps add informative message negative values transformed positive values using “prop”, “prop_typo” & “prop_choro” maps","code":""},{"path":"/news/index.html","id":"feat-0-6-0","dir":"Changelog","previous_headings":"","what":"Feat","title":"mapsf 0.6.0","text":"add “prop_typo”” maps LINES objects add mf_get_ratio() get appropriate values map width & height","code":""},{"path":"/news/index.html","id":"mapsf-050","dir":"Changelog","previous_headings":"","what":"mapsf 0.5.0","title":"mapsf 0.5.0","text":"CRAN release: 2022-05-30","code":""},{"path":"/news/index.html","id":"fix-0-5-0","dir":"Changelog","previous_headings":"","what":"Fix","title":"mapsf 0.5.0","text":"remove “export” arg exports based terra rasters remove “bg”” arg mf_map() add “pch = 20” default plot points mf_base() get sf back Depends Imports remove s2 related message recent version sf mf_worldmap()","code":""},{"path":"/news/index.html","id":"feat-0-5-0","dir":"Changelog","previous_headings":"","what":"Feat","title":"mapsf 0.5.0","text":"add “interactive” position legends, north arrow, scale bar, annotation add self-adjusted rounded values proportional circles legends","code":""},{"path":"/news/index.html","id":"mapsf-040","dir":"Changelog","previous_headings":"","what":"mapsf 0.4.0","title":"mapsf 0.4.0","text":"CRAN release: 2022-01-03","code":""},{"path":"/news/index.html","id":"fix-0-4-0","dir":"Changelog","previous_headings":"","what":"Fix","title":"mapsf 0.4.0","text":"allow display raster >=2 bands (exactly 3) avoid mf_map(…, type=“symb”) failing one modality make mf_export() aware export format filename extension (+ deprecate “export”” arg) add default maximum maxcell arg raster display mf_raster() change smooth defaults mf_raster(), TRUE nlyr>=2, FALSE otherwise","code":""},{"path":"/news/index.html","id":"feat-0-4-0","dir":"Changelog","previous_headings":"","what":"Feat","title":"mapsf 0.4.0","text":"add web vignette faceted maps add web vignette custom fonts add cheat sheet add parameters customize worldmaps (land ocean colors borders) add informatives messages concerning mf_map() input (checking type variable names)","code":""},{"path":"/news/index.html","id":"mapsf-030","dir":"Changelog","previous_headings":"","what":"mapsf 0.3.0","title":"mapsf 0.3.0","text":"CRAN release: 2021-09-24","code":""},{"path":"/news/index.html","id":"fix-0-3-0","dir":"Changelog","previous_headings":"","what":"Fix","title":"mapsf 0.3.0","text":"add support native pipe suppress messages appear s2 use switched mf_worldmap() replace raster terra things raster","code":""},{"path":"/news/index.html","id":"feat-0-3-0","dir":"Changelog","previous_headings":"","what":"Feat","title":"mapsf 0.3.0","text":"add web vignette insets add web vignette themes add mf_background(), function plot background image map add support raster mf_export() mf_init()","code":""},{"path":"/news/index.html","id":"mapsf-020","dir":"Changelog","previous_headings":"","what":"mapsf 0.2.0","title":"mapsf 0.2.0","text":"CRAN release: 2021-04-29","code":""},{"path":"/news/index.html","id":"fix-0-2-0","dir":"Changelog","previous_headings":"","what":"Fix","title":"mapsf 0.2.0","text":"change default value interpolate display without extra margins mf_raster() increase minimal R version 3.6.0 use hcl.colors() adjust largest symbol size mf_map(…, “prop*“) remove frame around insets remove LazyData DESCRIPTION use sf ‘fly’ projection unprojected sf objects better display titles maps (tiny extra space around maps) add explicit default value “add” arg mapping functions allow plot (coherent) GEOMETRYCOLLECTIONS better default POINT LINES mf_map(…, type = “base”) fix mf_worldmap() bypassing s2 use","code":""},{"path":"/news/index.html","id":"feat-0-2-0","dir":"Changelog","previous_headings":"","what":"Feat","title":"mapsf 0.2.0","text":"Added NEWS.md file track changes package. split mf_init() mf_init() mf_export() allow width height set mf_export() allow raster input mf_init() mf_export() allow change existent theme settings directrly mf_theme() make mf_theme() return current theme add default value txt, add bg arg (background) mf_credits() add coordinates positioning maps 2 legends add alpha arg transparency mapping functions using “pal” change default theme value theme tiny margins web vignette map export allow hcl.colors palette names use mf_legend*() functions","code":""}]
